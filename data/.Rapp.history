alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: visible rewards', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Competition condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 #par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Competition condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Congruent condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
congruent.stay_total <- stay_total
alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
competition.stay_total <- stay_total
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)
baseline.stay_total <- stay_total
graph_data <- NULL#
graph_data$switches <- c(1-(congruent.stay_total)/100, 1-(competition.stay_total)/100, 1-(baseline.stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(congruent.stay_total)),#
							 rep("Competition", length(competition.stay_total)),#
							 rep("Baseline", length(competition.stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
graph_data <- NULL#
graph_data$switches <- c(1-(congruent.stay_total)/100, 1-(competition.stay_total)/100, 1-(baseline.stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(congruent.stay_total)),#
							 rep("Competition", length(competition.stay_total)),#
							 rep("Baseline", length(baseline.stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
stay_total
t.test(congruent.stay_total, competition.stay_total, var.equal=T)#
t.test(congruent.stay_total, baseline.stay_total, var.equal=T)#
t.test(baseline.stay_total, competition.stay_total, var.equal=T)
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
congruent.props <- choice_props
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Congruent condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
###########################
choice_props <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
#
0.4290625#
#
t.test(choice_props_adults, choice_props_kids, var.equal=T)#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
###########################
choice_props <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
#
0.4290625#
#
t.test(choice_props_adults, choice_props_kids, var.equal=T)#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
baseline.props <- choice_props
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
competition.props <- choice_props
congruent.props #
baseline.props #
competition.props
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
baseline.props <- choice_props
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
congruent.props
length(congruent.props)
congruent.props[22]
congruent.props[22] <- 0#
#
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
results <- NULL#
#
results$props <- c(congruent.props, competition.props, baseline.props)#
results$cond <- factor(c(rep(1, length(congruent.props)),#
						rep(2, length(competition.props)),#
						rep(3, length(baseline.props))))
as.data.frame(results)
results <- as.data.frame(results)
x <- aov(props~cond, data=results)#
summary(x)
t.test(congruent.props, competition.props, var.equal=T)#
t.test(congruent.props, baseline.props, var.equal=T)#
t.test(baseline.props, competition.props, var.equal=T)
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
#
choice_props <- choices[,1]/100
baseline.props <- choice_props
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
#
choice_props <- choices[,1]/100
competition.props <- choice_props
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
#
choice_props <- choices[,1]/100
congruent.props <- choice_props
congruent.props <- choice_props#
baseline.props <- choice_props#
competition.props <- choice_props#
congruent.props #
baseline.props #
competition.props #
#
congruent.props[8] <- 0#
congruent.props[13] <- 0#
#
competition.props[3] <- 0#
competition.props[17] <- 0#
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )#
#
results <- NULL#
#
results$props <- c(congruent.props, competition.props, baseline.props)#
results$cond <- factor(c(rep(1, length(congruent.props)),#
						rep(2, length(competition.props)),#
						rep(3, length(baseline.props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)
(0.0028)/(0.0028+1.1835)
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,2))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey')#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey')#
dev.off()
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")
barplot(cong_stay_props[order(cong_stay_props)],#
		main ='Congruent',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")
t.test(cong_stay_total, comp_stay_total, var.equal=T)
graph_data <- NULL#
graph_data$switches <- c(1-(congruent.stay_total)/100, 1-(competition.stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(congruent.stay_total)),#
							 rep("Competition", length(competition.stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
densities = c(.3,100)
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
densities = c(.3,100)
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
stay_props_byoptions <- tapply(cong_data$stay, list(cong_data$reward, cong_data$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)
cong_choices
cong_choices[cong_choices == 0] <- 0
cong_choices
cong_choices[is.na(cong_choices)] <- 0
cong_choices
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)
jpeg('graphs/choice_props')#
par(mfrow=c(2,1))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
cong_lines(cong_line3_means/20, col = 'green', lwd=3)#
cong_lines(cong_line2_means/20, col = 'yellow', lwd=3)#
cong_lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
comp_lines(comp_line3_means/20, col = 'green', lwd=3)#
comp_lines(comp_line2_means/20, col = 'yellow', lwd=3)#
comp_lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#
dev.off()
jpeg('graphs/choice_props')#
par(mfrow=c(2,1))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#
dev.off()
#jpeg('graphs/choice_props')#
par(mfrow=c(2,1))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')
#jpeg('graphs/choice_props')#
par(mfrow=c(1,2))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#
#dev.off()
subjects <- unique(cong_data$subj) #
 graphs_per_row = 7#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(comp_data$subj) #
 graphs_per_row = 7#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_data[comp_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
bl_data <- read.table('baseline.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey')#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey')#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey')#
dev.off()
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total)),))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
bl_data <- read.table('baseline.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
bl_data <- read.table('baseline.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)
par(mfrow=c(1,2))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')
#jpeg('graphs/choice_props')#
par(mfrow=c(1,3))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#
#dev.off()#
##################
bl_block1 <- bl_data[bl_data$trial <= 20,]#
bl_block2 <- bl_data[bl_data$trial > 20 & bl_data$trial <= 40,]#
bl_block3 <- bl_data[bl_data$trial > 40 & bl_data$trial <= 60,]#
bl_block4 <- bl_data[bl_data$trial > 60 & bl_data$trial <= 80,]#
bl_block5 <- bl_data[bl_data$trial > 80 & bl_data$trial <= 100,]#
bl_block1_choices <- tapply(bl_block1$reward, list(bl_block1$subj, bl_block1$reward), length)#
bl_block1_choices[is.na(bl_block1_choices)] <- 0#
#
bl_block2_choices <- tapply(bl_block2$reward, list(bl_block2$subj, bl_block2$reward), length)#
bl_block2_choices[is.na(bl_block2_choices)] <- 0#
#
bl_block3_choices <- tapply(bl_block3$reward, list(bl_block3$subj, bl_block3$reward), length)#
bl_block3_choices[is.na(bl_block3_choices)] <- 0#
#
bl_block4_choices <- tapply(bl_block4$reward, list(bl_block4$subj, bl_block4$reward), length)#
bl_block4_choices[is.na(bl_block4_choices)] <- 0#
#
bl_block5_choices <- tapply(bl_block5$reward, list(bl_block5$subj, bl_block5$reward), length)#
bl_block5_choices[is.na(bl_block5_choices)] <- 0#
# means#
bl_line10_means <- c( mean(bl_block1_choices[,4]), #
             mean(bl_block2_choices[,4]),#
             mean(bl_block3_choices[,4]),#
             mean(bl_block4_choices[,4]),#
             mean(bl_block5_choices[,4]))#
bl_line3_means <- c( mean(bl_block1_choices[,3]), #
             mean(bl_block2_choices[,3]),#
             mean(bl_block3_choices[,3]),#
             mean(bl_block4_choices[,3]),#
             mean(bl_block5_choices[,3]))#
bl_line2_means <- c( mean(bl_block1_choices[,2]), #
             mean(bl_block2_choices[,2]),#
             mean(bl_block3_choices[,2]),#
             mean(bl_block4_choices[,2]),#
             mean(bl_block5_choices[,2]))#
bl_line1_means <- c( mean(bl_block1_choices[,1]), #
             mean(bl_block2_choices[,1]),#
             mean(bl_block3_choices[,1]),#
             mean(bl_block4_choices[,1]),#
             mean(bl_block5_choices[,1]))#
#
# standard deviations#
bl_line10_sds <- c( sd(bl_block1_choices[,4]), #
             sd(bl_block2_choices[,4]),#
             sd(bl_block3_choices[,4]),#
             sd(bl_block4_choices[,4]),#
             sd(bl_block5_choices[,4]))#
bl_line3_sds <- c( sd(bl_block1_choices[,3]), #
             sd(bl_block2_choices[,3]),#
             sd(bl_block3_choices[,3]),#
             sd(bl_block4_choices[,3]),#
             sd(bl_block5_choices[,3]))#
bl_line2_sds <- c( sd(bl_block1_choices[,2]), #
             sd(bl_block2_choices[,2]),#
             sd(bl_block3_choices[,2]),#
             sd(bl_block4_choices[,2]),#
             sd(bl_block5_choices[,2]))#
bl_line1_sds <- c( sd(bl_block1_choices[,1]), #
             sd(bl_block2_choices[,1]),#
             sd(bl_block3_choices[,1]),#
             sd(bl_block4_choices[,1]),#
             sd(bl_block5_choices[,1]))#
#
# Ns#
bl_line10_lengths <- c( length(bl_block1_choices[,4]), #
             length(bl_block2_choices[,4]),#
             length(bl_block3_choices[,4]),#
             length(bl_block4_choices[,4]),#
             length(bl_block5_choices[,4]))#
bl_line3_lengths <- c( length(bl_block1_choices[,3]), #
             length(bl_block2_choices[,3]),#
             length(bl_block3_choices[,3]),#
             length(bl_block4_choices[,3]),#
             length(bl_block5_choices[,3]))#
bl_line2_lengths <- c( length(bl_block1_choices[,2]), #
             length(bl_block2_choices[,2]),#
             length(bl_block3_choices[,2]),#
             length(bl_block4_choices[,2]),#
             length(bl_block5_choices[,2]))#
bl_line1_lengths <- c( length(bl_block1_choices[,1]), #
             length(bl_block2_choices[,1]),#
             length(bl_block3_choices[,1]),#
             length(bl_block4_choices[,1]),#
             length(bl_block5_choices[,1]))#
bl_line10_ses <- bl_line10_sds/sqrt(bl_line10_lengths)#
bl_line3_ses <- bl_line3_sds/sqrt(bl_line3_lengths)#
bl_line2_ses <- bl_line2_sds/sqrt(bl_line2_lengths)#
bl_line1_ses <- bl_line1_sds/sqrt(bl_line1_lengths)#
plot(bl_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(bl_line3_means/20, col = 'green', lwd=3)#
lines(bl_line2_means/20, col = 'yellow', lwd=3)#
lines(bl_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, bl_line10_means/20+bl_line10_ses/20, x, bl_line10_means/20-bl_line10_ses/20, col='blue')#
segments(x, bl_line3_means/20+bl_line3_ses/20, x, bl_line3_means/20-bl_line3_ses/20, col='green')#
segments(x, bl_line2_means/20+bl_line2_ses/20, x, bl_line2_means/20-bl_line2_ses/20, col='yellow')#
segments(x, bl_line1_means/20+bl_line1_ses/20, x, bl_line1_means/20-bl_line1_ses/20, col='red')#
#
#dev.off()
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
bl_data <- read.table('baseline.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)#
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
dev.off()
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)
cong_props
results <- NULL#
#
results$props <- c(cong_props, comp_props, bl_props)#
results$cond <- factor(c(rep(1, length(cong_props)),#
						rep(2, length(comp_props)),#
						rep(3, length(bl_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)
#jpeg('graphs/choice_props')#
par(mfrow=c(1,3))#
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#
#dev.off()#
##################
bl_block1 <- bl_data[bl_data$trial <= 20,]#
bl_block2 <- bl_data[bl_data$trial > 20 & bl_data$trial <= 40,]#
bl_block3 <- bl_data[bl_data$trial > 40 & bl_data$trial <= 60,]#
bl_block4 <- bl_data[bl_data$trial > 60 & bl_data$trial <= 80,]#
bl_block5 <- bl_data[bl_data$trial > 80 & bl_data$trial <= 100,]#
bl_block1_choices <- tapply(bl_block1$reward, list(bl_block1$subj, bl_block1$reward), length)#
bl_block1_choices[is.na(bl_block1_choices)] <- 0#
#
bl_block2_choices <- tapply(bl_block2$reward, list(bl_block2$subj, bl_block2$reward), length)#
bl_block2_choices[is.na(bl_block2_choices)] <- 0#
#
bl_block3_choices <- tapply(bl_block3$reward, list(bl_block3$subj, bl_block3$reward), length)#
bl_block3_choices[is.na(bl_block3_choices)] <- 0#
#
bl_block4_choices <- tapply(bl_block4$reward, list(bl_block4$subj, bl_block4$reward), length)#
bl_block4_choices[is.na(bl_block4_choices)] <- 0#
#
bl_block5_choices <- tapply(bl_block5$reward, list(bl_block5$subj, bl_block5$reward), length)#
bl_block5_choices[is.na(bl_block5_choices)] <- 0#
# means#
bl_line10_means <- c( mean(bl_block1_choices[,4]), #
             mean(bl_block2_choices[,4]),#
             mean(bl_block3_choices[,4]),#
             mean(bl_block4_choices[,4]),#
             mean(bl_block5_choices[,4]))#
bl_line3_means <- c( mean(bl_block1_choices[,3]), #
             mean(bl_block2_choices[,3]),#
             mean(bl_block3_choices[,3]),#
             mean(bl_block4_choices[,3]),#
             mean(bl_block5_choices[,3]))#
bl_line2_means <- c( mean(bl_block1_choices[,2]), #
             mean(bl_block2_choices[,2]),#
             mean(bl_block3_choices[,2]),#
             mean(bl_block4_choices[,2]),#
             mean(bl_block5_choices[,2]))#
bl_line1_means <- c( mean(bl_block1_choices[,1]), #
             mean(bl_block2_choices[,1]),#
             mean(bl_block3_choices[,1]),#
             mean(bl_block4_choices[,1]),#
             mean(bl_block5_choices[,1]))#
#
# standard deviations#
bl_line10_sds <- c( sd(bl_block1_choices[,4]), #
             sd(bl_block2_choices[,4]),#
             sd(bl_block3_choices[,4]),#
             sd(bl_block4_choices[,4]),#
             sd(bl_block5_choices[,4]))#
bl_line3_sds <- c( sd(bl_block1_choices[,3]), #
             sd(bl_block2_choices[,3]),#
             sd(bl_block3_choices[,3]),#
             sd(bl_block4_choices[,3]),#
             sd(bl_block5_choices[,3]))#
bl_line2_sds <- c( sd(bl_block1_choices[,2]), #
             sd(bl_block2_choices[,2]),#
             sd(bl_block3_choices[,2]),#
             sd(bl_block4_choices[,2]),#
             sd(bl_block5_choices[,2]))#
bl_line1_sds <- c( sd(bl_block1_choices[,1]), #
             sd(bl_block2_choices[,1]),#
             sd(bl_block3_choices[,1]),#
             sd(bl_block4_choices[,1]),#
             sd(bl_block5_choices[,1]))#
#
# Ns#
bl_line10_lengths <- c( length(bl_block1_choices[,4]), #
             length(bl_block2_choices[,4]),#
             length(bl_block3_choices[,4]),#
             length(bl_block4_choices[,4]),#
             length(bl_block5_choices[,4]))#
bl_line3_lengths <- c( length(bl_block1_choices[,3]), #
             length(bl_block2_choices[,3]),#
             length(bl_block3_choices[,3]),#
             length(bl_block4_choices[,3]),#
             length(bl_block5_choices[,3]))#
bl_line2_lengths <- c( length(bl_block1_choices[,2]), #
             length(bl_block2_choices[,2]),#
             length(bl_block3_choices[,2]),#
             length(bl_block4_choices[,2]),#
             length(bl_block5_choices[,2]))#
bl_line1_lengths <- c( length(bl_block1_choices[,1]), #
             length(bl_block2_choices[,1]),#
             length(bl_block3_choices[,1]),#
             length(bl_block4_choices[,1]),#
             length(bl_block5_choices[,1]))#
bl_line10_ses <- bl_line10_sds/sqrt(bl_line10_lengths)#
bl_line3_ses <- bl_line3_sds/sqrt(bl_line3_lengths)#
bl_line2_ses <- bl_line2_sds/sqrt(bl_line2_lengths)#
bl_line1_ses <- bl_line1_sds/sqrt(bl_line1_lengths)#
plot(bl_line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(bl_line3_means/20, col = 'green', lwd=3)#
lines(bl_line2_means/20, col = 'yellow', lwd=3)#
lines(bl_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, bl_line10_means/20+bl_line10_ses/20, x, bl_line10_means/20-bl_line10_ses/20, col='blue')#
segments(x, bl_line3_means/20+bl_line3_ses/20, x, bl_line3_means/20-bl_line3_ses/20, col='green')#
segments(x, bl_line2_means/20+bl_line2_ses/20, x, bl_line2_means/20-bl_line2_ses/20, col='yellow')#
segments(x, bl_line1_means/20+bl_line1_ses/20, x, bl_line1_means/20-bl_line1_ses/20, col='red')#
#
#dev.off()
#################################################################
 subjects <- unique(cong_data$subj) #
 graphs_per_row = 7#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(cong_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(cong_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(comp_data$subj) #
 graphs_per_row = 7#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_data[comp_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
#################################################################
 subjects <- unique(cong_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(comp_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_data[comp_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(bl_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- bl_data[bl_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
cong_data <- read.table('congruent_adults.txt', header=F)#
comp_data <- read.table('competition_adults.txt', header=F)#
bl_data <- read.table('baseline_adults.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)#
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()#
#
############################
#
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
x <- aov( switches ~ group, data=graph_data)#
summary(x)#
#dev.off()
t.test(graph_data[graph_data$group=='Congruent',]$switches, graph_data[graph_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_data[graph_data$group=='Baseline',]$switches, graph_data[graph_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_data[graph_data$group=='Congruent',]$switches, graph_data[graph_data$group=='Baseline',]$switches,var.equal=T)
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)
results <- NULL#
#
results$props <- c(cong_props, comp_props, bl_props)#
results$cond <- factor(c(rep(1, length(cong_props)),#
						rep(2, length(comp_props)),#
						rep(3, length(bl_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)
t.test(cong_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)
cong_props <- cong_choices[,1]/100#
comp_props <- comp_choices[,1]/100#
bl_props <- bl_choices[,1]/100#
#
results <- NULL#
#
results$props <- c(cong_props, comp_props, bl_props)#
results$cond <- factor(c(rep(1, length(cong_props)),#
						rep(2, length(comp_props)),#
						rep(3, length(bl_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)
t.test(cong_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)
par(mfrow=c(3,1))#
##################
bl_block1 <- bl_data[bl_data$trial <= 20,]#
bl_block2 <- bl_data[bl_data$trial > 20 & bl_data$trial <= 40,]#
bl_block3 <- bl_data[bl_data$trial > 40 & bl_data$trial <= 60,]#
bl_block4 <- bl_data[bl_data$trial > 60 & bl_data$trial <= 80,]#
bl_block5 <- bl_data[bl_data$trial > 80 & bl_data$trial <= 100,]#
bl_block1_choices <- tapply(bl_block1$reward, list(bl_block1$subj, bl_block1$reward), length)#
bl_block1_choices[is.na(bl_block1_choices)] <- 0#
#
bl_block2_choices <- tapply(bl_block2$reward, list(bl_block2$subj, bl_block2$reward), length)#
bl_block2_choices[is.na(bl_block2_choices)] <- 0#
#
bl_block3_choices <- tapply(bl_block3$reward, list(bl_block3$subj, bl_block3$reward), length)#
bl_block3_choices[is.na(bl_block3_choices)] <- 0#
#
bl_block4_choices <- tapply(bl_block4$reward, list(bl_block4$subj, bl_block4$reward), length)#
bl_block4_choices[is.na(bl_block4_choices)] <- 0#
#
bl_block5_choices <- tapply(bl_block5$reward, list(bl_block5$subj, bl_block5$reward), length)#
bl_block5_choices[is.na(bl_block5_choices)] <- 0#
# means#
bl_line10_means <- c( mean(bl_block1_choices[,4]), #
             mean(bl_block2_choices[,4]),#
             mean(bl_block3_choices[,4]),#
             mean(bl_block4_choices[,4]),#
             mean(bl_block5_choices[,4]))#
bl_line3_means <- c( mean(bl_block1_choices[,3]), #
             mean(bl_block2_choices[,3]),#
             mean(bl_block3_choices[,3]),#
             mean(bl_block4_choices[,3]),#
             mean(bl_block5_choices[,3]))#
bl_line2_means <- c( mean(bl_block1_choices[,2]), #
             mean(bl_block2_choices[,2]),#
             mean(bl_block3_choices[,2]),#
             mean(bl_block4_choices[,2]),#
             mean(bl_block5_choices[,2]))#
bl_line1_means <- c( mean(bl_block1_choices[,1]), #
             mean(bl_block2_choices[,1]),#
             mean(bl_block3_choices[,1]),#
             mean(bl_block4_choices[,1]),#
             mean(bl_block5_choices[,1]))#
#
# standard deviations#
bl_line10_sds <- c( sd(bl_block1_choices[,4]), #
             sd(bl_block2_choices[,4]),#
             sd(bl_block3_choices[,4]),#
             sd(bl_block4_choices[,4]),#
             sd(bl_block5_choices[,4]))#
bl_line3_sds <- c( sd(bl_block1_choices[,3]), #
             sd(bl_block2_choices[,3]),#
             sd(bl_block3_choices[,3]),#
             sd(bl_block4_choices[,3]),#
             sd(bl_block5_choices[,3]))#
bl_line2_sds <- c( sd(bl_block1_choices[,2]), #
             sd(bl_block2_choices[,2]),#
             sd(bl_block3_choices[,2]),#
             sd(bl_block4_choices[,2]),#
             sd(bl_block5_choices[,2]))#
bl_line1_sds <- c( sd(bl_block1_choices[,1]), #
             sd(bl_block2_choices[,1]),#
             sd(bl_block3_choices[,1]),#
             sd(bl_block4_choices[,1]),#
             sd(bl_block5_choices[,1]))#
#
# Ns#
bl_line10_lengths <- c( length(bl_block1_choices[,4]), #
             length(bl_block2_choices[,4]),#
             length(bl_block3_choices[,4]),#
             length(bl_block4_choices[,4]),#
             length(bl_block5_choices[,4]))#
bl_line3_lengths <- c( length(bl_block1_choices[,3]), #
             length(bl_block2_choices[,3]),#
             length(bl_block3_choices[,3]),#
             length(bl_block4_choices[,3]),#
             length(bl_block5_choices[,3]))#
bl_line2_lengths <- c( length(bl_block1_choices[,2]), #
             length(bl_block2_choices[,2]),#
             length(bl_block3_choices[,2]),#
             length(bl_block4_choices[,2]),#
             length(bl_block5_choices[,2]))#
bl_line1_lengths <- c( length(bl_block1_choices[,1]), #
             length(bl_block2_choices[,1]),#
             length(bl_block3_choices[,1]),#
             length(bl_block4_choices[,1]),#
             length(bl_block5_choices[,1]))#
bl_line10_ses <- bl_line10_sds/sqrt(bl_line10_lengths)#
bl_line3_ses <- bl_line3_sds/sqrt(bl_line3_lengths)#
bl_line2_ses <- bl_line2_sds/sqrt(bl_line2_lengths)#
bl_line1_ses <- bl_line1_sds/sqrt(bl_line1_lengths)#
plot(bl_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(bl_line3_means/20, col = 'green', lwd=3)#
lines(bl_line2_means/20, col = 'yellow', lwd=3)#
lines(bl_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, bl_line10_means/20+bl_line10_ses/20, x, bl_line10_means/20-bl_line10_ses/20, col='blue')#
segments(x, bl_line3_means/20+bl_line3_ses/20, x, bl_line3_means/20-bl_line3_ses/20, col='green')#
segments(x, bl_line2_means/20+bl_line2_ses/20, x, bl_line2_means/20-bl_line2_ses/20, col='yellow')#
segments(x, bl_line1_means/20+bl_line1_ses/20, x, bl_line1_means/20-bl_line1_ses/20, col='red')#
#
#dev.off()#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#dev.off()#
###################
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', lty= 2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')
subjects <- unique(cong_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(cong_data$subj) #
 graphs_per_row = 7#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(cong_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(comp_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_data[comp_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(bl_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- bl_data[bl_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(bl_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- bl_data[bl_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
cong_data <- read.table('congruent_adults.txt', header=F)#
comp_data <- read.table('competition_adults.txt', header=F)#
bl_data <- read.table('baseline_adults.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')
unique(bl_data$subj)#
unique(comp_data$subj)#
unique(cong_data$subj)
length(unique(bl_data$subj))#
length(unique(comp_data$subj))#
length(unique(cong_data$subj))
cong_data <- read.table('congruent.txt', header=F)#
comp_data <- read.table('competition.txt', header=F)#
bl_data <- read.table('baseline.txt', header=F)#
#
names(cong_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_data$stay <- NULL#
for (i in 1:length(cong_data[,1])) {#
    cong_data$stay[i] <- as.numeric(cong_data[i,]$res == cong_data[i-1,]$res)#
    if (cong_data[i,]$trial == 1) { cong_data$stay[i] <- 0 }#
    }#
comp_data$stay <- NULL#
for (i in 1:length(comp_data[,1])) {#
    comp_data$stay[i] <- as.numeric(comp_data[i,]$res == comp_data[i-1,]$res)#
    if (comp_data[i,]$trial == 1) { comp_data$stay[i] <- 0 }#
    }#
bl_data$stay <- NULL#
for (i in 1:length(bl_data[,1])) {#
    bl_data$stay[i] <- as.numeric(bl_data[i,]$res == bl_data[i-1,]$res)#
    if (bl_data[i,]$trial == 1) { bl_data$stay[i] <- 0 }#
    }#
cong_stay_total <- tapply(cong_data$stay, cong_data$subj, sum)#
for (i in 1:length(cong_stay_total)) {#
	x <- binom.test(cong_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_stay_total <- tapply(comp_data$stay, comp_data$subj, sum)#
for (i in 1:length(comp_stay_total)) {#
	x <- binom.test(comp_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_stay_total <- tapply(bl_data$stay, bl_data$subj, sum)#
for (i in 1:length(bl_stay_total)) {#
	x <- binom.test(bl_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_stay_total, comp_stay_total, var.equal=T)#
t.test(bl_stay_total, comp_stay_total, var.equal=T)#
t.test(cong_stay_total, bl_stay_total, var.equal=T)#
cong_stay_props <- tapply(cong_data$stay, cong_data$subj, mean)#
comp_stay_props <- tapply(comp_data$stay, comp_data$subj, mean)#
bl_stay_props <- tapply(bl_data$stay, bl_data$subj, mean)#
jpeg('graphs/switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
dev.off()#
#
############################
#
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
#
x <- aov( switches ~ group, data=graph_data)#
summary(x)#
#dev.off()#
#
# SWITCH PROPORTIONS ANOVA#
#> x <- aov( switches ~ group, data=graph_data)#
#> summary(x)#
#             Df Sum Sq Mean Sq F value   Pr(>F)    #
#group         2  2.237  1.1184   17.42 2.83e-07 ***#
#Residuals   107  6.871  0.0642                     #
#---#
#Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1#
#
t.test(graph_data[graph_data$group=='Congruent',]$switches, graph_data[graph_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_data[graph_data$group=='Baseline',]$switches, graph_data[graph_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_data[graph_data$group=='Congruent',]$switches, graph_data[graph_data$group=='Baseline',]$switches,var.equal=T)#
#
d.t.unpaired(3.035, 37, 37)#
d.t.unpaired(3.2223, 37, 36)#
d.t.unpaired(5.5738, 37, 36)#
#
##################################################################
#
cong_choices <- tapply(cong_data$reward, list(cong_data$subj, cong_data$reward), length)#
cong_choices[is.na(cong_choices)] <- 0#
#
comp_choices <- tapply(comp_data$reward, list(comp_data$subj, comp_data$reward), length)#
comp_choices[is.na(comp_choices)] <- 0#
#
bl_choices <- tapply(bl_data$reward, list(bl_data$subj, bl_data$reward), length)#
bl_choices[is.na(bl_choices)] <- 0#
#
cong_props <- cong_choices[,4]/100#
comp_props <- comp_choices[,4]/100#
bl_props <- bl_choices[,4]/100#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
results <- NULL#
#
results$props <- c(cong_props, comp_props, bl_props)#
results$cond <- factor(c(rep(1, length(cong_props)),#
						rep(2, length(comp_props)),#
						rep(3, length(bl_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
#
d.t.unpaired(3.93, 37, 37)#
#
d.t.unpaired(0.57193, 36, 37)#
#
#####################################################################
#
cong_props <- cong_choices[,1]/100#
comp_props <- comp_choices[,1]/100#
bl_props <- bl_choices[,1]/100#
#
results <- NULL#
#
results$props <- c(cong_props, comp_props, bl_props)#
results$cond <- factor(c(rep(1, length(cong_props)),#
						rep(2, length(comp_props)),#
						rep(3, length(bl_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
#
t.test(cong_props, comp_props, var.equal=T)#
t.test(cong_props, bl_props, var.equal=T)#
t.test(bl_props, comp_props, var.equal=T)#
d.t.unpaired(2.6014, 37, 37)#
d.t.unpaired(3.2182, 37, 36)#
d.t.unpaired(0.65299, 37, 36)#
#
####################################################################
#
#jpeg('graphs/choice_props')#
par(mfrow=c(1,3))#
##################
bl_block1 <- bl_data[bl_data$trial <= 20,]#
bl_block2 <- bl_data[bl_data$trial > 20 & bl_data$trial <= 40,]#
bl_block3 <- bl_data[bl_data$trial > 40 & bl_data$trial <= 60,]#
bl_block4 <- bl_data[bl_data$trial > 60 & bl_data$trial <= 80,]#
bl_block5 <- bl_data[bl_data$trial > 80 & bl_data$trial <= 100,]#
bl_block1_choices <- tapply(bl_block1$reward, list(bl_block1$subj, bl_block1$reward), length)#
bl_block1_choices[is.na(bl_block1_choices)] <- 0#
#
bl_block2_choices <- tapply(bl_block2$reward, list(bl_block2$subj, bl_block2$reward), length)#
bl_block2_choices[is.na(bl_block2_choices)] <- 0#
#
bl_block3_choices <- tapply(bl_block3$reward, list(bl_block3$subj, bl_block3$reward), length)#
bl_block3_choices[is.na(bl_block3_choices)] <- 0#
#
bl_block4_choices <- tapply(bl_block4$reward, list(bl_block4$subj, bl_block4$reward), length)#
bl_block4_choices[is.na(bl_block4_choices)] <- 0#
#
bl_block5_choices <- tapply(bl_block5$reward, list(bl_block5$subj, bl_block5$reward), length)#
bl_block5_choices[is.na(bl_block5_choices)] <- 0#
# means#
bl_line10_means <- c( mean(bl_block1_choices[,4]), #
             mean(bl_block2_choices[,4]),#
             mean(bl_block3_choices[,4]),#
             mean(bl_block4_choices[,4]),#
             mean(bl_block5_choices[,4]))#
bl_line3_means <- c( mean(bl_block1_choices[,3]), #
             mean(bl_block2_choices[,3]),#
             mean(bl_block3_choices[,3]),#
             mean(bl_block4_choices[,3]),#
             mean(bl_block5_choices[,3]))#
bl_line2_means <- c( mean(bl_block1_choices[,2]), #
             mean(bl_block2_choices[,2]),#
             mean(bl_block3_choices[,2]),#
             mean(bl_block4_choices[,2]),#
             mean(bl_block5_choices[,2]))#
bl_line1_means <- c( mean(bl_block1_choices[,1]), #
             mean(bl_block2_choices[,1]),#
             mean(bl_block3_choices[,1]),#
             mean(bl_block4_choices[,1]),#
             mean(bl_block5_choices[,1]))#
#
# standard deviations#
bl_line10_sds <- c( sd(bl_block1_choices[,4]), #
             sd(bl_block2_choices[,4]),#
             sd(bl_block3_choices[,4]),#
             sd(bl_block4_choices[,4]),#
             sd(bl_block5_choices[,4]))#
bl_line3_sds <- c( sd(bl_block1_choices[,3]), #
             sd(bl_block2_choices[,3]),#
             sd(bl_block3_choices[,3]),#
             sd(bl_block4_choices[,3]),#
             sd(bl_block5_choices[,3]))#
bl_line2_sds <- c( sd(bl_block1_choices[,2]), #
             sd(bl_block2_choices[,2]),#
             sd(bl_block3_choices[,2]),#
             sd(bl_block4_choices[,2]),#
             sd(bl_block5_choices[,2]))#
bl_line1_sds <- c( sd(bl_block1_choices[,1]), #
             sd(bl_block2_choices[,1]),#
             sd(bl_block3_choices[,1]),#
             sd(bl_block4_choices[,1]),#
             sd(bl_block5_choices[,1]))#
#
# Ns#
bl_line10_lengths <- c( length(bl_block1_choices[,4]), #
             length(bl_block2_choices[,4]),#
             length(bl_block3_choices[,4]),#
             length(bl_block4_choices[,4]),#
             length(bl_block5_choices[,4]))#
bl_line3_lengths <- c( length(bl_block1_choices[,3]), #
             length(bl_block2_choices[,3]),#
             length(bl_block3_choices[,3]),#
             length(bl_block4_choices[,3]),#
             length(bl_block5_choices[,3]))#
bl_line2_lengths <- c( length(bl_block1_choices[,2]), #
             length(bl_block2_choices[,2]),#
             length(bl_block3_choices[,2]),#
             length(bl_block4_choices[,2]),#
             length(bl_block5_choices[,2]))#
bl_line1_lengths <- c( length(bl_block1_choices[,1]), #
             length(bl_block2_choices[,1]),#
             length(bl_block3_choices[,1]),#
             length(bl_block4_choices[,1]),#
             length(bl_block5_choices[,1]))#
bl_line10_ses <- bl_line10_sds/sqrt(bl_line10_lengths)#
bl_line3_ses <- bl_line3_sds/sqrt(bl_line3_lengths)#
bl_line2_ses <- bl_line2_sds/sqrt(bl_line2_lengths)#
bl_line1_ses <- bl_line1_sds/sqrt(bl_line1_lengths)#
plot(bl_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(bl_line3_means/20, col = 'green', lwd=3)#
lines(bl_line2_means/20, col = 'yellow', lwd=3)#
lines(bl_line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, bl_line10_means/20+bl_line10_ses/20, x, bl_line10_means/20-bl_line10_ses/20, col='blue')#
segments(x, bl_line3_means/20+bl_line3_ses/20, x, bl_line3_means/20-bl_line3_ses/20, col='green')#
segments(x, bl_line2_means/20+bl_line2_ses/20, x, bl_line2_means/20-bl_line2_ses/20, col='yellow')#
segments(x, bl_line1_means/20+bl_line1_ses/20, x, bl_line1_means/20-bl_line1_ses/20, col='red')#
#
#dev.off()#
##################
comp_block1 <- comp_data[comp_data$trial <= 20,]#
comp_block2 <- comp_data[comp_data$trial > 20 & comp_data$trial <= 40,]#
comp_block3 <- comp_data[comp_data$trial > 40 & comp_data$trial <= 60,]#
comp_block4 <- comp_data[comp_data$trial > 60 & comp_data$trial <= 80,]#
comp_block5 <- comp_data[comp_data$trial > 80 & comp_data$trial <= 100,]#
comp_block1_choices <- tapply(comp_block1$reward, list(comp_block1$subj, comp_block1$reward), length)#
comp_block1_choices[is.na(comp_block1_choices)] <- 0#
#
comp_block2_choices <- tapply(comp_block2$reward, list(comp_block2$subj, comp_block2$reward), length)#
comp_block2_choices[is.na(comp_block2_choices)] <- 0#
#
comp_block3_choices <- tapply(comp_block3$reward, list(comp_block3$subj, comp_block3$reward), length)#
comp_block3_choices[is.na(comp_block3_choices)] <- 0#
#
comp_block4_choices <- tapply(comp_block4$reward, list(comp_block4$subj, comp_block4$reward), length)#
comp_block4_choices[is.na(comp_block4_choices)] <- 0#
#
comp_block5_choices <- tapply(comp_block5$reward, list(comp_block5$subj, comp_block5$reward), length)#
comp_block5_choices[is.na(comp_block5_choices)] <- 0#
# means#
comp_line10_means <- c( mean(comp_block1_choices[,4]), #
             mean(comp_block2_choices[,4]),#
             mean(comp_block3_choices[,4]),#
             mean(comp_block4_choices[,4]),#
             mean(comp_block5_choices[,4]))#
comp_line3_means <- c( mean(comp_block1_choices[,3]), #
             mean(comp_block2_choices[,3]),#
             mean(comp_block3_choices[,3]),#
             mean(comp_block4_choices[,3]),#
             mean(comp_block5_choices[,3]))#
comp_line2_means <- c( mean(comp_block1_choices[,2]), #
             mean(comp_block2_choices[,2]),#
             mean(comp_block3_choices[,2]),#
             mean(comp_block4_choices[,2]),#
             mean(comp_block5_choices[,2]))#
comp_line1_means <- c( mean(comp_block1_choices[,1]), #
             mean(comp_block2_choices[,1]),#
             mean(comp_block3_choices[,1]),#
             mean(comp_block4_choices[,1]),#
             mean(comp_block5_choices[,1]))#
#
# standard deviations#
comp_line10_sds <- c( sd(comp_block1_choices[,4]), #
             sd(comp_block2_choices[,4]),#
             sd(comp_block3_choices[,4]),#
             sd(comp_block4_choices[,4]),#
             sd(comp_block5_choices[,4]))#
comp_line3_sds <- c( sd(comp_block1_choices[,3]), #
             sd(comp_block2_choices[,3]),#
             sd(comp_block3_choices[,3]),#
             sd(comp_block4_choices[,3]),#
             sd(comp_block5_choices[,3]))#
comp_line2_sds <- c( sd(comp_block1_choices[,2]), #
             sd(comp_block2_choices[,2]),#
             sd(comp_block3_choices[,2]),#
             sd(comp_block4_choices[,2]),#
             sd(comp_block5_choices[,2]))#
comp_line1_sds <- c( sd(comp_block1_choices[,1]), #
             sd(comp_block2_choices[,1]),#
             sd(comp_block3_choices[,1]),#
             sd(comp_block4_choices[,1]),#
             sd(comp_block5_choices[,1]))#
#
# Ns#
comp_line10_lengths <- c( length(comp_block1_choices[,4]), #
             length(comp_block2_choices[,4]),#
             length(comp_block3_choices[,4]),#
             length(comp_block4_choices[,4]),#
             length(comp_block5_choices[,4]))#
comp_line3_lengths <- c( length(comp_block1_choices[,3]), #
             length(comp_block2_choices[,3]),#
             length(comp_block3_choices[,3]),#
             length(comp_block4_choices[,3]),#
             length(comp_block5_choices[,3]))#
comp_line2_lengths <- c( length(comp_block1_choices[,2]), #
             length(comp_block2_choices[,2]),#
             length(comp_block3_choices[,2]),#
             length(comp_block4_choices[,2]),#
             length(comp_block5_choices[,2]))#
comp_line1_lengths <- c( length(comp_block1_choices[,1]), #
             length(comp_block2_choices[,1]),#
             length(comp_block3_choices[,1]),#
             length(comp_block4_choices[,1]),#
             length(comp_block5_choices[,1]))#
comp_line10_ses <- comp_line10_sds/sqrt(comp_line10_lengths)#
comp_line3_ses <- comp_line3_sds/sqrt(comp_line3_lengths)#
comp_line2_ses <- comp_line2_sds/sqrt(comp_line2_lengths)#
comp_line1_ses <- comp_line1_sds/sqrt(comp_line1_lengths)#
plot(comp_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(comp_line3_means/20, col = 'green', lwd=3)#
lines(comp_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_line1_means/20, col = 'red', lwd=3)#
#
# legend(1, 1.0, c("10", "3", "2", "1"), #
	   # col = c("blue", "green", "yellow", "red"), #
	   # lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_line10_means/20+comp_line10_ses/20, x, comp_line10_means/20-comp_line10_ses/20, col='blue')#
segments(x, comp_line3_means/20+comp_line3_ses/20, x, comp_line3_means/20-comp_line3_ses/20, col='green')#
segments(x, comp_line2_means/20+comp_line2_ses/20, x, comp_line2_means/20-comp_line2_ses/20, col='yellow')#
segments(x, comp_line1_means/20+comp_line1_ses/20, x, comp_line1_means/20-comp_line1_ses/20, col='red')#
#dev.off()#
###################
#
cong_block1 <- cong_data[cong_data$trial <= 20,]#
cong_block2 <- cong_data[cong_data$trial > 20 & cong_data$trial <= 40,]#
cong_block3 <- cong_data[cong_data$trial > 40 & cong_data$trial <= 60,]#
cong_block4 <- cong_data[cong_data$trial > 60 & cong_data$trial <= 80,]#
cong_block5 <- cong_data[cong_data$trial > 80 & cong_data$trial <= 100,]#
cong_block1_choices <- tapply(cong_block1$reward, list(cong_block1$subj, cong_block1$reward), length)#
cong_block1_choices[is.na(cong_block1_choices)] <- 0#
#
cong_block2_choices <- tapply(cong_block2$reward, list(cong_block2$subj, cong_block2$reward), length)#
cong_block2_choices[is.na(cong_block2_choices)] <- 0#
#
cong_block3_choices <- tapply(cong_block3$reward, list(cong_block3$subj, cong_block3$reward), length)#
cong_block3_choices[is.na(cong_block3_choices)] <- 0#
#
cong_block4_choices <- tapply(cong_block4$reward, list(cong_block4$subj, cong_block4$reward), length)#
cong_block4_choices[is.na(cong_block4_choices)] <- 0#
#
cong_block5_choices <- tapply(cong_block5$reward, list(cong_block5$subj, cong_block5$reward), length)#
cong_block5_choices[is.na(cong_block5_choices)] <- 0#
# means#
cong_line10_means <- c( mean(cong_block1_choices[,4]), #
             mean(cong_block2_choices[,4]),#
             mean(cong_block3_choices[,4]),#
             mean(cong_block4_choices[,4]),#
             mean(cong_block5_choices[,4]))#
cong_line3_means <- c( mean(cong_block1_choices[,3]), #
             mean(cong_block2_choices[,3]),#
             mean(cong_block3_choices[,3]),#
             mean(cong_block4_choices[,3]),#
             mean(cong_block5_choices[,3]))#
cong_line2_means <- c( mean(cong_block1_choices[,2]), #
             mean(cong_block2_choices[,2]),#
             mean(cong_block3_choices[,2]),#
             mean(cong_block4_choices[,2]),#
             mean(cong_block5_choices[,2]))#
cong_line1_means <- c( mean(cong_block1_choices[,1]), #
             mean(cong_block2_choices[,1]),#
             mean(cong_block3_choices[,1]),#
             mean(cong_block4_choices[,1]),#
             mean(cong_block5_choices[,1]))#
#
# standard deviations#
cong_line10_sds <- c( sd(cong_block1_choices[,4]), #
             sd(cong_block2_choices[,4]),#
             sd(cong_block3_choices[,4]),#
             sd(cong_block4_choices[,4]),#
             sd(cong_block5_choices[,4]))#
cong_line3_sds <- c( sd(cong_block1_choices[,3]), #
             sd(cong_block2_choices[,3]),#
             sd(cong_block3_choices[,3]),#
             sd(cong_block4_choices[,3]),#
             sd(cong_block5_choices[,3]))#
cong_line2_sds <- c( sd(cong_block1_choices[,2]), #
             sd(cong_block2_choices[,2]),#
             sd(cong_block3_choices[,2]),#
             sd(cong_block4_choices[,2]),#
             sd(cong_block5_choices[,2]))#
cong_line1_sds <- c( sd(cong_block1_choices[,1]), #
             sd(cong_block2_choices[,1]),#
             sd(cong_block3_choices[,1]),#
             sd(cong_block4_choices[,1]),#
             sd(cong_block5_choices[,1]))#
#
# Ns#
cong_line10_lengths <- c( length(cong_block1_choices[,4]), #
             length(cong_block2_choices[,4]),#
             length(cong_block3_choices[,4]),#
             length(cong_block4_choices[,4]),#
             length(cong_block5_choices[,4]))#
cong_line3_lengths <- c( length(cong_block1_choices[,3]), #
             length(cong_block2_choices[,3]),#
             length(cong_block3_choices[,3]),#
             length(cong_block4_choices[,3]),#
             length(cong_block5_choices[,3]))#
cong_line2_lengths <- c( length(cong_block1_choices[,2]), #
             length(cong_block2_choices[,2]),#
             length(cong_block3_choices[,2]),#
             length(cong_block4_choices[,2]),#
             length(cong_block5_choices[,2]))#
cong_line1_lengths <- c( length(cong_block1_choices[,1]), #
             length(cong_block2_choices[,1]),#
             length(cong_block3_choices[,1]),#
             length(cong_block4_choices[,1]),#
             length(cong_block5_choices[,1]))#
cong_line10_ses <- cong_line10_sds/sqrt(cong_line10_lengths)#
cong_line3_ses <- cong_line3_sds/sqrt(cong_line3_lengths)#
cong_line2_ses <- cong_line2_sds/sqrt(cong_line2_lengths)#
cong_line1_ses <- cong_line1_sds/sqrt(cong_line1_lengths)#
plot(cong_line10_means/20, type='l', lty= 2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(cong_line3_means/20, col = 'green', lwd=3)#
lines(cong_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_line1_means/20, col = 'red', lwd=3)#
#
# legend(1, 1.0, c("10", "3", "2", "1"), #
	   # col = c("blue", "green", "yellow", "red"), #
	   # lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_line10_means/20+cong_line10_ses/20, x, cong_line10_means/20-cong_line10_ses/20, col='blue')#
segments(x, cong_line3_means/20+cong_line3_ses/20, x, cong_line3_means/20-cong_line3_ses/20, col='green')#
segments(x, cong_line2_means/20+cong_line2_ses/20, x, cong_line2_means/20-cong_line2_ses/20, col='yellow')#
segments(x, cong_line1_means/20+cong_line1_ses/20, x, cong_line1_means/20-cong_line1_ses/20, col='red')#
#################################################################
 subjects <- unique(cong_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_data[cong_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }#
#################################################################
 subjects <- unique(comp_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_data[comp_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }#
#
################################################################
#
subjects <- unique(bl_data$subj) #
 graphs_per_row = 8#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- bl_data[bl_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
cong_adult_data <- read.table('congruent_adults.txt', header=F)#
comp_adult_data <- read.table('competition_adults.txt', header=F)#
bl_adult_data <- read.table('baseline_adults.txt', header=F)#
#
names(cong_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
length(unique(bl_adult_data$subj))#
length(unique(comp_adult_data$subj))#
length(unique(cong_adult_data$subj))#
#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_adult_data$stay <- NULL#
for (i in 1:length(cong_adult_data[,1])) {#
    cong_adult_data$stay[i] <- as.numeric(cong_adult_data[i,]$res == cong_adult_data[i-1,]$res)#
    if (cong_adult_data[i,]$trial == 1) { cong_adult_data$stay[i] <- 0 }#
    }#
comp_adult_data$stay <- NULL#
for (i in 1:length(comp_adult_data[,1])) {#
    comp_adult_data$stay[i] <- as.numeric(comp_adult_data[i,]$res == comp_adult_data[i-1,]$res)#
    if (comp_adult_data[i,]$trial == 1) { comp_adult_data$stay[i] <- 0 }#
    }#
bl_adult_data$stay <- NULL#
for (i in 1:length(bl_adult_data[,1])) {#
    bl_adult_data$stay[i] <- as.numeric(bl_adult_data[i,]$res == bl_adult_data[i-1,]$res)#
    if (bl_adult_data[i,]$trial == 1) { bl_adult_data$stay[i] <- 0 }#
    }#
cong_adult_stay_total <- tapply(cong_adult_data$stay, cong_adult_data$subj, sum)#
for (i in 1:length(cong_adult_stay_total)) {#
	x <- binom.test(cong_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_adult_stay_total <- tapply(comp_adult_data$stay, comp_adult_data$subj, sum)#
for (i in 1:length(comp_adult_stay_total)) {#
	x <- binom.test(comp_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_adult_stay_total <- tapply(bl_adult_data$stay, bl_adult_data$subj, sum)#
for (i in 1:length(bl_adult_stay_total)) {#
	x <- binom.test(bl_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_adult_stay_total, comp_adult_stay_total, var.equal=T)#
t.test(bl_adult_stay_total, comp_adult_stay_total, var.equal=T)#
t.test(cong_adult_stay_total, bl_adult_stay_total, var.equal=T)#
cong_adult_stay_props <- tapply(cong_adult_data$stay, cong_adult_data$subj, mean)#
comp_adult_stay_props <- tapply(comp_adult_data$stay, comp_adult_data$subj, mean)#
bl_adult_stay_props <- tapply(bl_adult_data$stay, bl_adult_data$subj, mean)#
#jpeg('graphs/adult_switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_adult_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_adult_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_adult_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
#dev.off()#
#
############################
#
graph_adult_data <- NULL#
graph_adult_data$switches <- c(1-(cong_adult_stay_total)/100, 1-(comp_adult_stay_total)/100, 1-(bl_adult_stay_total)/100)#
graph_adult_data$group <- factor(c(rep("Congruent", length(cong_adult_stay_total)),#
							 rep("Competition", length(comp_adult_stay_total)),#
							 rep("Baseline", length(bl_adult_stay_total))))#
graph_adult_data <- as.data.frame(graph_adult_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_adult_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_adult_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
#
x <- aov( switches ~ group, data=graph_adult_data)#
summary(x)#
#dev.off()#
#
#> x <- aov( switches ~ group, data=graph_adult_data)#
#> summary(x)#
#            Df Sum Sq Mean Sq F value Pr(>F)#
#group        2 0.0523 0.02616   1.628  0.205#
#Residuals   63 1.0125 0.01607          #
t.test(graph_adult_data[graph_adult_data$group=='Congruent',]$switches, graph_adult_data[graph_adult_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_adult_data[graph_adult_data$group=='Baseline',]$switches, graph_adult_data[graph_adult_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_adult_data[graph_adult_data$group=='Congruent',]$switches, graph_adult_data[graph_adult_data$group=='Baseline',]$switches,var.equal=T)#
#
d.t.unpaired(3.035, 37, 37)#
d.t.unpaired(3.2223, 37, 36)#
d.t.unpaired(5.5738, 37, 36)#
#
##################################################################
#
cong_adult_choices <- tapply(cong_adult_data$reward, list(cong_adult_data$subj, cong_adult_data$reward), length)#
cong_adult_choices[is.na(cong_adult_choices)] <- 0#
#
comp_adult_choices <- tapply(comp_adult_data$reward, list(comp_adult_data$subj, comp_adult_data$reward), length)#
comp_adult_choices[is.na(comp_adult_choices)] <- 0#
#
bl_adult_choices <- tapply(bl_adult_data$reward, list(bl_adult_data$subj, bl_adult_data$reward), length)#
bl_adult_choices[is.na(bl_adult_choices)] <- 0#
#
cong_adult_props <- cong_adult_choices[,4]/100#
comp_adult_props <- comp_adult_choices[,4]/100#
bl_adult_props <- bl_adult_choices[,4]/100#
results <- NULL#
#
results$props <- c(cong_adult_props, comp_adult_props, bl_adult_props)#
results$cond <- factor(c(rep(1, length(cong_adult_props)),#
						rep(2, length(comp_adult_props)),#
						rep(3, length(bl_adult_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
t.test(cong_adult_props, comp_adult_props, var.equal=T)#
t.test(cong_adult_props, bl_adult_props, var.equal=T)#
t.test(bl_adult_props, comp_adult_props, var.equal=T)#
# comp was lower than the others#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
#
d.t.unpaired(3.93, 37, 37)#
#
d.t.unpaired(0.57193, 36, 37)#
#
#####################################################################
#
cong_adult_props <- cong_adult_choices[,1]/100#
comp_adult_props <- comp_adult_choices[,1]/100#
bl_adult_props <- bl_adult_choices[,1]/100#
#
results <- NULL#
#
results$props <- c(cong_adult_props, comp_adult_props, bl_adult_props)#
results$cond <- factor(c(rep(1, length(cong_adult_props)),#
						rep(2, length(comp_adult_props)),#
						rep(3, length(bl_adult_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
#
#> x <- aov(props~cond, data=results)#
#> summary(x)#
#            Df Sum Sq Mean Sq F value  Pr(>F)   #
#cond         2 0.5222 0.26110   7.685 0.00103 **#
#Residuals   63 2.1405 0.03398                   #
#---#
#Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1#
#
t.test(cong_adult_props, comp_adult_props, var.equal=T)#
t.test(cong_adult_props, bl_adult_props, var.equal=T)#
t.test(bl_adult_props, comp_adult_props, var.equal=T)#
# comp is higher than the others#
#
d.t.unpaired(2.6014, 37, 37)#
d.t.unpaired(3.2182, 37, 36)#
d.t.unpaired(0.65299, 37, 36)#
#
####################################################################
#
#jpeg('graphs/choice_props')#
par(mfrow=c(1,3))#
##################
bl_adult_block1 <- bl_adult_data[bl_adult_data$trial <= 20,]#
bl_adult_block2 <- bl_adult_data[bl_adult_data$trial > 20 & bl_adult_data$trial <= 40,]#
bl_adult_block3 <- bl_adult_data[bl_adult_data$trial > 40 & bl_adult_data$trial <= 60,]#
bl_adult_block4 <- bl_adult_data[bl_adult_data$trial > 60 & bl_adult_data$trial <= 80,]#
bl_adult_block5 <- bl_adult_data[bl_adult_data$trial > 80 & bl_adult_data$trial <= 100,]#
bl_adult_block1_choices <- tapply(bl_adult_block1$reward, list(bl_adult_block1$subj, bl_adult_block1$reward), length)#
bl_adult_block1_choices[is.na(bl_adult_block1_choices)] <- 0#
#
bl_adult_block2_choices <- tapply(bl_adult_block2$reward, list(bl_adult_block2$subj, bl_adult_block2$reward), length)#
bl_adult_block2_choices[is.na(bl_adult_block2_choices)] <- 0#
#
bl_adult_block3_choices <- tapply(bl_adult_block3$reward, list(bl_adult_block3$subj, bl_adult_block3$reward), length)#
bl_adult_block3_choices[is.na(bl_adult_block3_choices)] <- 0#
#
bl_adult_block4_choices <- tapply(bl_adult_block4$reward, list(bl_adult_block4$subj, bl_adult_block4$reward), length)#
bl_adult_block4_choices[is.na(bl_adult_block4_choices)] <- 0#
#
bl_adult_block5_choices <- tapply(bl_adult_block5$reward, list(bl_adult_block5$subj, bl_adult_block5$reward), length)#
bl_adult_block5_choices[is.na(bl_adult_block5_choices)] <- 0#
# means#
bl_adult_line10_means <- c( mean(bl_adult_block1_choices[,4]), #
             mean(bl_adult_block2_choices[,4]),#
             mean(bl_adult_block3_choices[,4]),#
             mean(bl_adult_block4_choices[,4]),#
             mean(bl_adult_block5_choices[,4]))#
bl_adult_line3_means <- c( mean(bl_adult_block1_choices[,3]), #
             mean(bl_adult_block2_choices[,3]),#
             mean(bl_adult_block3_choices[,3]),#
             mean(bl_adult_block4_choices[,3]),#
             mean(bl_adult_block5_choices[,3]))#
bl_adult_line2_means <- c( mean(bl_adult_block1_choices[,2]), #
             mean(bl_adult_block2_choices[,2]),#
             mean(bl_adult_block3_choices[,2]),#
             mean(bl_adult_block4_choices[,2]),#
             mean(bl_adult_block5_choices[,2]))#
bl_adult_line1_means <- c( mean(bl_adult_block1_choices[,1]), #
             mean(bl_adult_block2_choices[,1]),#
             mean(bl_adult_block3_choices[,1]),#
             mean(bl_adult_block4_choices[,1]),#
             mean(bl_adult_block5_choices[,1]))#
#
# standard deviations#
bl_adult_line10_sds <- c( sd(bl_adult_block1_choices[,4]), #
             sd(bl_adult_block2_choices[,4]),#
             sd(bl_adult_block3_choices[,4]),#
             sd(bl_adult_block4_choices[,4]),#
             sd(bl_adult_block5_choices[,4]))#
bl_adult_line3_sds <- c( sd(bl_adult_block1_choices[,3]), #
             sd(bl_adult_block2_choices[,3]),#
             sd(bl_adult_block3_choices[,3]),#
             sd(bl_adult_block4_choices[,3]),#
             sd(bl_adult_block5_choices[,3]))#
bl_adult_line2_sds <- c( sd(bl_adult_block1_choices[,2]), #
             sd(bl_adult_block2_choices[,2]),#
             sd(bl_adult_block3_choices[,2]),#
             sd(bl_adult_block4_choices[,2]),#
             sd(bl_adult_block5_choices[,2]))#
bl_adult_line1_sds <- c( sd(bl_adult_block1_choices[,1]), #
             sd(bl_adult_block2_choices[,1]),#
             sd(bl_adult_block3_choices[,1]),#
             sd(bl_adult_block4_choices[,1]),#
             sd(bl_adult_block5_choices[,1]))#
#
# Ns#
bl_adult_line10_lengths <- c( length(bl_adult_block1_choices[,4]), #
             length(bl_adult_block2_choices[,4]),#
             length(bl_adult_block3_choices[,4]),#
             length(bl_adult_block4_choices[,4]),#
             length(bl_adult_block5_choices[,4]))#
bl_adult_line3_lengths <- c( length(bl_adult_block1_choices[,3]), #
             length(bl_adult_block2_choices[,3]),#
             length(bl_adult_block3_choices[,3]),#
             length(bl_adult_block4_choices[,3]),#
             length(bl_adult_block5_choices[,3]))#
bl_adult_line2_lengths <- c( length(bl_adult_block1_choices[,2]), #
             length(bl_adult_block2_choices[,2]),#
             length(bl_adult_block3_choices[,2]),#
             length(bl_adult_block4_choices[,2]),#
             length(bl_adult_block5_choices[,2]))#
bl_adult_line1_lengths <- c( length(bl_adult_block1_choices[,1]), #
             length(bl_adult_block2_choices[,1]),#
             length(bl_adult_block3_choices[,1]),#
             length(bl_adult_block4_choices[,1]),#
             length(bl_adult_block5_choices[,1]))#
bl_adult_line10_ses <- bl_adult_line10_sds/sqrt(bl_adult_line10_lengths)#
bl_adult_line3_ses <- bl_adult_line3_sds/sqrt(bl_adult_line3_lengths)#
bl_adult_line2_ses <- bl_adult_line2_sds/sqrt(bl_adult_line2_lengths)#
bl_adult_line1_ses <- bl_adult_line1_sds/sqrt(bl_adult_line1_lengths)#
plot(bl_adult_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(bl_adult_line3_means/20, col = 'green', lwd=3)#
lines(bl_adult_line2_means/20, col = 'yellow', lwd=3)#
lines(bl_adult_line1_means/20, col = 'red', lwd=3)#
#
# legend(1, 1.0, c("10", "3", "2", "1"), #
	   # col = c("blue", "green", "yellow", "red"), #
	   # lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, bl_adult_line10_means/20+bl_adult_line10_ses/20, x, bl_adult_line10_means/20-bl_adult_line10_ses/20, col='blue')#
segments(x, bl_adult_line3_means/20+bl_adult_line3_ses/20, x, bl_adult_line3_means/20-bl_adult_line3_ses/20, col='green')#
segments(x, bl_adult_line2_means/20+bl_adult_line2_ses/20, x, bl_adult_line2_means/20-bl_adult_line2_ses/20, col='yellow')#
segments(x, bl_adult_line1_means/20+bl_adult_line1_ses/20, x, bl_adult_line1_means/20-bl_adult_line1_ses/20, col='red')#
#
#dev.off()#
##################
comp_adult_block1 <- comp_adult_data[comp_adult_data$trial <= 20,]#
comp_adult_block2 <- comp_adult_data[comp_adult_data$trial > 20 & comp_adult_data$trial <= 40,]#
comp_adult_block3 <- comp_adult_data[comp_adult_data$trial > 40 & comp_adult_data$trial <= 60,]#
comp_adult_block4 <- comp_adult_data[comp_adult_data$trial > 60 & comp_adult_data$trial <= 80,]#
comp_adult_block5 <- comp_adult_data[comp_adult_data$trial > 80 & comp_adult_data$trial <= 100,]#
comp_adult_block1_choices <- tapply(comp_adult_block1$reward, list(comp_adult_block1$subj, comp_adult_block1$reward), length)#
comp_adult_block1_choices[is.na(comp_adult_block1_choices)] <- 0#
#
comp_adult_block2_choices <- tapply(comp_adult_block2$reward, list(comp_adult_block2$subj, comp_adult_block2$reward), length)#
comp_adult_block2_choices[is.na(comp_adult_block2_choices)] <- 0#
#
comp_adult_block3_choices <- tapply(comp_adult_block3$reward, list(comp_adult_block3$subj, comp_adult_block3$reward), length)#
comp_adult_block3_choices[is.na(comp_adult_block3_choices)] <- 0#
#
comp_adult_block4_choices <- tapply(comp_adult_block4$reward, list(comp_adult_block4$subj, comp_adult_block4$reward), length)#
comp_adult_block4_choices[is.na(comp_adult_block4_choices)] <- 0#
#
comp_adult_block5_choices <- tapply(comp_adult_block5$reward, list(comp_adult_block5$subj, comp_adult_block5$reward), length)#
comp_adult_block5_choices[is.na(comp_adult_block5_choices)] <- 0#
# means#
comp_adult_line10_means <- c( mean(comp_adult_block1_choices[,4]), #
             mean(comp_adult_block2_choices[,4]),#
             mean(comp_adult_block3_choices[,4]),#
             mean(comp_adult_block4_choices[,4]),#
             mean(comp_adult_block5_choices[,4]))#
comp_adult_line3_means <- c( mean(comp_adult_block1_choices[,3]), #
             mean(comp_adult_block2_choices[,3]),#
             mean(comp_adult_block3_choices[,3]),#
             mean(comp_adult_block4_choices[,3]),#
             mean(comp_adult_block5_choices[,3]))#
comp_adult_line2_means <- c( mean(comp_adult_block1_choices[,2]), #
             mean(comp_adult_block2_choices[,2]),#
             mean(comp_adult_block3_choices[,2]),#
             mean(comp_adult_block4_choices[,2]),#
             mean(comp_adult_block5_choices[,2]))#
comp_adult_line1_means <- c( mean(comp_adult_block1_choices[,1]), #
             mean(comp_adult_block2_choices[,1]),#
             mean(comp_adult_block3_choices[,1]),#
             mean(comp_adult_block4_choices[,1]),#
             mean(comp_adult_block5_choices[,1]))#
#
# standard deviations#
comp_adult_line10_sds <- c( sd(comp_adult_block1_choices[,4]), #
             sd(comp_adult_block2_choices[,4]),#
             sd(comp_adult_block3_choices[,4]),#
             sd(comp_adult_block4_choices[,4]),#
             sd(comp_adult_block5_choices[,4]))#
comp_adult_line3_sds <- c( sd(comp_adult_block1_choices[,3]), #
             sd(comp_adult_block2_choices[,3]),#
             sd(comp_adult_block3_choices[,3]),#
             sd(comp_adult_block4_choices[,3]),#
             sd(comp_adult_block5_choices[,3]))#
comp_adult_line2_sds <- c( sd(comp_adult_block1_choices[,2]), #
             sd(comp_adult_block2_choices[,2]),#
             sd(comp_adult_block3_choices[,2]),#
             sd(comp_adult_block4_choices[,2]),#
             sd(comp_adult_block5_choices[,2]))#
comp_adult_line1_sds <- c( sd(comp_adult_block1_choices[,1]), #
             sd(comp_adult_block2_choices[,1]),#
             sd(comp_adult_block3_choices[,1]),#
             sd(comp_adult_block4_choices[,1]),#
             sd(comp_adult_block5_choices[,1]))#
#
# Ns#
comp_adult_line10_lengths <- c( length(comp_adult_block1_choices[,4]), #
             length(comp_adult_block2_choices[,4]),#
             length(comp_adult_block3_choices[,4]),#
             length(comp_adult_block4_choices[,4]),#
             length(comp_adult_block5_choices[,4]))#
comp_adult_line3_lengths <- c( length(comp_adult_block1_choices[,3]), #
             length(comp_adult_block2_choices[,3]),#
             length(comp_adult_block3_choices[,3]),#
             length(comp_adult_block4_choices[,3]),#
             length(comp_adult_block5_choices[,3]))#
comp_adult_line2_lengths <- c( length(comp_adult_block1_choices[,2]), #
             length(comp_adult_block2_choices[,2]),#
             length(comp_adult_block3_choices[,2]),#
             length(comp_adult_block4_choices[,2]),#
             length(comp_adult_block5_choices[,2]))#
comp_adult_line1_lengths <- c( length(comp_adult_block1_choices[,1]), #
             length(comp_adult_block2_choices[,1]),#
             length(comp_adult_block3_choices[,1]),#
             length(comp_adult_block4_choices[,1]),#
             length(comp_adult_block5_choices[,1]))#
comp_adult_line10_ses <- comp_adult_line10_sds/sqrt(comp_adult_line10_lengths)#
comp_adult_line3_ses <- comp_adult_line3_sds/sqrt(comp_adult_line3_lengths)#
comp_adult_line2_ses <- comp_adult_line2_sds/sqrt(comp_adult_line2_lengths)#
comp_adult_line1_ses <- comp_adult_line1_sds/sqrt(comp_adult_line1_lengths)#
plot(comp_adult_line10_means/20, type='l', lty=2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(comp_adult_line3_means/20, col = 'green', lwd=3)#
lines(comp_adult_line2_means/20, col = 'yellow', lwd=3)#
lines(comp_adult_line1_means/20, col = 'red', lwd=3)#
#
# legend(1, 1.0, c("10", "3", "2", "1"), #
	   # col = c("blue", "green", "yellow", "red"), #
	   # lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, comp_adult_line10_means/20+comp_adult_line10_ses/20, x, comp_adult_line10_means/20-comp_adult_line10_ses/20, col='blue')#
segments(x, comp_adult_line3_means/20+comp_adult_line3_ses/20, x, comp_adult_line3_means/20-comp_adult_line3_ses/20, col='green')#
segments(x, comp_adult_line2_means/20+comp_adult_line2_ses/20, x, comp_adult_line2_means/20-comp_adult_line2_ses/20, col='yellow')#
segments(x, comp_adult_line1_means/20+comp_adult_line1_ses/20, x, comp_adult_line1_means/20-comp_adult_line1_ses/20, col='red')#
#dev.off()#
###################
#
cong_adult_block1 <- cong_adult_data[cong_adult_data$trial <= 20,]#
cong_adult_block2 <- cong_adult_data[cong_adult_data$trial > 20 & cong_adult_data$trial <= 40,]#
cong_adult_block3 <- cong_adult_data[cong_adult_data$trial > 40 & cong_adult_data$trial <= 60,]#
cong_adult_block4 <- cong_adult_data[cong_adult_data$trial > 60 & cong_adult_data$trial <= 80,]#
cong_adult_block5 <- cong_adult_data[cong_adult_data$trial > 80 & cong_adult_data$trial <= 100,]#
cong_adult_block1_choices <- tapply(cong_adult_block1$reward, list(cong_adult_block1$subj, cong_adult_block1$reward), length)#
cong_adult_block1_choices[is.na(cong_adult_block1_choices)] <- 0#
#
cong_adult_block2_choices <- tapply(cong_adult_block2$reward, list(cong_adult_block2$subj, cong_adult_block2$reward), length)#
cong_adult_block2_choices[is.na(cong_adult_block2_choices)] <- 0#
#
cong_adult_block3_choices <- tapply(cong_adult_block3$reward, list(cong_adult_block3$subj, cong_adult_block3$reward), length)#
cong_adult_block3_choices[is.na(cong_adult_block3_choices)] <- 0#
#
cong_adult_block4_choices <- tapply(cong_adult_block4$reward, list(cong_adult_block4$subj, cong_adult_block4$reward), length)#
cong_adult_block4_choices[is.na(cong_adult_block4_choices)] <- 0#
#
cong_adult_block5_choices <- tapply(cong_adult_block5$reward, list(cong_adult_block5$subj, cong_adult_block5$reward), length)#
cong_adult_block5_choices[is.na(cong_adult_block5_choices)] <- 0#
# means#
cong_adult_line10_means <- c( mean(cong_adult_block1_choices[,4]), #
             mean(cong_adult_block2_choices[,4]),#
             mean(cong_adult_block3_choices[,4]),#
             mean(cong_adult_block4_choices[,4]),#
             mean(cong_adult_block5_choices[,4]))#
cong_adult_line3_means <- c( mean(cong_adult_block1_choices[,3]), #
             mean(cong_adult_block2_choices[,3]),#
             mean(cong_adult_block3_choices[,3]),#
             mean(cong_adult_block4_choices[,3]),#
             mean(cong_adult_block5_choices[,3]))#
cong_adult_line2_means <- c( mean(cong_adult_block1_choices[,2]), #
             mean(cong_adult_block2_choices[,2]),#
             mean(cong_adult_block3_choices[,2]),#
             mean(cong_adult_block4_choices[,2]),#
             mean(cong_adult_block5_choices[,2]))#
cong_adult_line1_means <- c( mean(cong_adult_block1_choices[,1]), #
             mean(cong_adult_block2_choices[,1]),#
             mean(cong_adult_block3_choices[,1]),#
             mean(cong_adult_block4_choices[,1]),#
             mean(cong_adult_block5_choices[,1]))#
#
# standard deviations#
cong_adult_line10_sds <- c( sd(cong_adult_block1_choices[,4]), #
             sd(cong_adult_block2_choices[,4]),#
             sd(cong_adult_block3_choices[,4]),#
             sd(cong_adult_block4_choices[,4]),#
             sd(cong_adult_block5_choices[,4]))#
cong_adult_line3_sds <- c( sd(cong_adult_block1_choices[,3]), #
             sd(cong_adult_block2_choices[,3]),#
             sd(cong_adult_block3_choices[,3]),#
             sd(cong_adult_block4_choices[,3]),#
             sd(cong_adult_block5_choices[,3]))#
cong_adult_line2_sds <- c( sd(cong_adult_block1_choices[,2]), #
             sd(cong_adult_block2_choices[,2]),#
             sd(cong_adult_block3_choices[,2]),#
             sd(cong_adult_block4_choices[,2]),#
             sd(cong_adult_block5_choices[,2]))#
cong_adult_line1_sds <- c( sd(cong_adult_block1_choices[,1]), #
             sd(cong_adult_block2_choices[,1]),#
             sd(cong_adult_block3_choices[,1]),#
             sd(cong_adult_block4_choices[,1]),#
             sd(cong_adult_block5_choices[,1]))#
#
# Ns#
cong_adult_line10_lengths <- c( length(cong_adult_block1_choices[,4]), #
             length(cong_adult_block2_choices[,4]),#
             length(cong_adult_block3_choices[,4]),#
             length(cong_adult_block4_choices[,4]),#
             length(cong_adult_block5_choices[,4]))#
cong_adult_line3_lengths <- c( length(cong_adult_block1_choices[,3]), #
             length(cong_adult_block2_choices[,3]),#
             length(cong_adult_block3_choices[,3]),#
             length(cong_adult_block4_choices[,3]),#
             length(cong_adult_block5_choices[,3]))#
cong_adult_line2_lengths <- c( length(cong_adult_block1_choices[,2]), #
             length(cong_adult_block2_choices[,2]),#
             length(cong_adult_block3_choices[,2]),#
             length(cong_adult_block4_choices[,2]),#
             length(cong_adult_block5_choices[,2]))#
cong_adult_line1_lengths <- c( length(cong_adult_block1_choices[,1]), #
             length(cong_adult_block2_choices[,1]),#
             length(cong_adult_block3_choices[,1]),#
             length(cong_adult_block4_choices[,1]),#
             length(cong_adult_block5_choices[,1]))#
cong_adult_line10_ses <- cong_adult_line10_sds/sqrt(cong_adult_line10_lengths)#
cong_adult_line3_ses <- cong_adult_line3_sds/sqrt(cong_adult_line3_lengths)#
cong_adult_line2_ses <- cong_adult_line2_sds/sqrt(cong_adult_line2_lengths)#
cong_adult_line1_ses <- cong_adult_line1_sds/sqrt(cong_adult_line1_lengths)#
plot(cong_adult_line10_means/20, type='l', lty= 2, col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=2)#
lines(cong_adult_line3_means/20, col = 'green', lwd=3)#
lines(cong_adult_line2_means/20, col = 'yellow', lwd=3)#
lines(cong_adult_line1_means/20, col = 'red', lwd=3)#
#
# legend(1, 1.0, c("10", "3", "2", "1"), #
	   # col = c("blue", "green", "yellow", "red"), #
	   # lty = c(2,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, cong_adult_line10_means/20+cong_adult_line10_ses/20, x, cong_adult_line10_means/20-cong_adult_line10_ses/20, col='blue')#
segments(x, cong_adult_line3_means/20+cong_adult_line3_ses/20, x, cong_adult_line3_means/20-cong_adult_line3_ses/20, col='green')#
segments(x, cong_adult_line2_means/20+cong_adult_line2_ses/20, x, cong_adult_line2_means/20-cong_adult_line2_ses/20, col='yellow')#
segments(x, cong_adult_line1_means/20+cong_adult_line1_ses/20, x, cong_adult_line1_means/20-cong_adult_line1_ses/20, col='red')#
#################################################################
 subjects <- unique(cong_adult_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- cong_adult_data[cong_adult_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }#
#################################################################
 subjects <- unique(comp_adult_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- comp_adult_data[comp_adult_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }#
#
################################################################
#
subjects <- unique(bl_adult_data$subj) #
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- bl_adult_data[bl_adult_data$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
par(mfrow=c(1,2))#
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Children', names.arg=c('Congruent', 'Competition', 'Baseline'), cex.lab=1.3, cex.axis=1.2)#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
graph_adult_data <- NULL#
graph_adult_data$switches <- c(1-(cong_adult_stay_total)/100, 1-(comp_adult_stay_total)/100, 1-(bl_adult_stay_total)/100)#
graph_adult_data$group <- factor(c(rep("Congruent", length(cong_adult_stay_total)),#
							 rep("Competition", length(comp_adult_stay_total)),#
							 rep("Baseline", length(bl_adult_stay_total))))#
graph_adult_data <- as.data.frame(graph_adult_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_adult_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Adults', names.arg=c('Congruent', 'Competition', 'Baseline'), cex.lab=1.3, cex.names=1.2, cex.axis=1.2)#
stripchart(switches ~ group, data=graph_adult_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
par(mfrow=c(1,2))#
graph_data <- NULL#
graph_data$switches <- c(1-(cong_stay_total)/100, 1-(comp_stay_total)/100, 1-(bl_stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(cong_stay_total)),#
							 rep("Competition", length(comp_stay_total)),#
							 rep("Baseline", length(bl_stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Children', names.arg=c('Congruent', 'Competition', 'Baseline'), cex.lab=1.2, cex.names=0.8, cex.axis=1.2)#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
graph_adult_data <- NULL#
graph_adult_data$switches <- c(1-(cong_adult_stay_total)/100, 1-(comp_adult_stay_total)/100, 1-(bl_adult_stay_total)/100)#
graph_adult_data$group <- factor(c(rep("Congruent", length(cong_adult_stay_total)),#
							 rep("Competition", length(comp_adult_stay_total)),#
							 rep("Baseline", length(bl_adult_stay_total))))#
graph_adult_data <- as.data.frame(graph_adult_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_adult_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Adults', names.arg=c('Congruent', 'Competition', 'Baseline'), cex.lab=1.2, cex.names=0.8, cex.axis=1.2)#
stripchart(switches ~ group, data=graph_adult_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
cong_adult_data <- read.table('congruent_adults.txt', header=F)#
comp_adult_data <- read.table('competition_adults.txt', header=F)#
bl_adult_data <- read.table('baseline_adults.txt', header=F)#
#
names(cong_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(comp_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
names(bl_adult_data) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
length(unique(bl_adult_data$subj))#
length(unique(comp_adult_data$subj))#
length(unique(cong_adult_data$subj))#
#
##############################################################################
# 	SWITCH ANALYSES#
#
cong_adult_data$stay <- NULL#
for (i in 1:length(cong_adult_data[,1])) {#
    cong_adult_data$stay[i] <- as.numeric(cong_adult_data[i,]$res == cong_adult_data[i-1,]$res)#
    if (cong_adult_data[i,]$trial == 1) { cong_adult_data$stay[i] <- 0 }#
    }#
comp_adult_data$stay <- NULL#
for (i in 1:length(comp_adult_data[,1])) {#
    comp_adult_data$stay[i] <- as.numeric(comp_adult_data[i,]$res == comp_adult_data[i-1,]$res)#
    if (comp_adult_data[i,]$trial == 1) { comp_adult_data$stay[i] <- 0 }#
    }#
bl_adult_data$stay <- NULL#
for (i in 1:length(bl_adult_data[,1])) {#
    bl_adult_data$stay[i] <- as.numeric(bl_adult_data[i,]$res == bl_adult_data[i-1,]$res)#
    if (bl_adult_data[i,]$trial == 1) { bl_adult_data$stay[i] <- 0 }#
    }#
cong_adult_stay_total <- tapply(cong_adult_data$stay, cong_adult_data$subj, sum)#
for (i in 1:length(cong_adult_stay_total)) {#
	x <- binom.test(cong_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
comp_adult_stay_total <- tapply(comp_adult_data$stay, comp_adult_data$subj, sum)#
for (i in 1:length(comp_adult_stay_total)) {#
	x <- binom.test(comp_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
#
bl_adult_stay_total <- tapply(bl_adult_data$stay, bl_adult_data$subj, sum)#
for (i in 1:length(bl_adult_stay_total)) {#
	x <- binom.test(bl_adult_stay_total[i], 100, 0.25)#
	print(x)#
}#
t.test(cong_adult_stay_total, comp_adult_stay_total, var.equal=T)#
t.test(bl_adult_stay_total, comp_adult_stay_total, var.equal=T)#
t.test(cong_adult_stay_total, bl_adult_stay_total, var.equal=T)#
cong_adult_stay_props <- tapply(cong_adult_data$stay, cong_adult_data$subj, mean)#
comp_adult_stay_props <- tapply(comp_adult_data$stay, comp_adult_data$subj, mean)#
bl_adult_stay_props <- tapply(bl_adult_data$stay, bl_adult_data$subj, mean)#
#jpeg('graphs/adult_switch_hists.jpg')#
par(mfrow=c(1,3))#
hist(cong_adult_stay_props, main= "Congruent", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(comp_adult_stay_props, main= "Competition", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
hist(bl_adult_stay_props, main= "Baseline", xlab="Proportion of repeat responses", col='grey', xlim=c(0,1))#
#dev.off()#
#
############################
#
graph_adult_data <- NULL#
graph_adult_data$switches <- c(1-(cong_adult_stay_total)/100, 1-(comp_adult_stay_total)/100, 1-(bl_adult_stay_total)/100)#
graph_adult_data$group <- factor(c(rep("Congruent", length(cong_adult_stay_total)),#
							 rep("Competition", length(comp_adult_stay_total)),#
							 rep("Baseline", length(bl_adult_stay_total))))#
graph_adult_data <- as.data.frame(graph_adult_data)#
#
#jpeg('graphs/switch_box.jpg')#
boxplot(switches ~ group, data=graph_adult_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition', 'Baseline'))#
stripchart(switches ~ group, data=graph_adult_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')#
#
x <- aov( switches ~ group, data=graph_adult_data)#
summary(x)#
#dev.off()#
#
#> x <- aov( switches ~ group, data=graph_adult_data)#
#> summary(x)#
#            Df Sum Sq Mean Sq F value Pr(>F)#
#group        2 0.0523 0.02616   1.628  0.205#
#Residuals   63 1.0125 0.01607          #
t.test(graph_adult_data[graph_adult_data$group=='Congruent',]$switches, graph_adult_data[graph_adult_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_adult_data[graph_adult_data$group=='Baseline',]$switches, graph_adult_data[graph_adult_data$group=='Competition',]$switches,var.equal=T)#
t.test(graph_adult_data[graph_adult_data$group=='Congruent',]$switches, graph_adult_data[graph_adult_data$group=='Baseline',]$switches,var.equal=T)
cong_adult_choices <- tapply(cong_adult_data$reward, list(cong_adult_data$subj, cong_adult_data$reward), length)#
cong_adult_choices[is.na(cong_adult_choices)] <- 0#
#
comp_adult_choices <- tapply(comp_adult_data$reward, list(comp_adult_data$subj, comp_adult_data$reward), length)#
comp_adult_choices[is.na(comp_adult_choices)] <- 0#
#
bl_adult_choices <- tapply(bl_adult_data$reward, list(bl_adult_data$subj, bl_adult_data$reward), length)#
bl_adult_choices[is.na(bl_adult_choices)] <- 0#
#
cong_adult_props <- cong_adult_choices[,4]/100#
comp_adult_props <- comp_adult_choices[,4]/100#
bl_adult_props <- bl_adult_choices[,4]/100#
results <- NULL#
#
results$props <- c(cong_adult_props, comp_adult_props, bl_adult_props)#
results$cond <- factor(c(rep(1, length(cong_adult_props)),#
						rep(2, length(comp_adult_props)),#
						rep(3, length(bl_adult_props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)#
t.test(cong_adult_props, comp_adult_props, var.equal=T)#
t.test(cong_adult_props, bl_adult_props, var.equal=T)#
t.test(bl_adult_props, comp_adult_props, var.equal=T)
