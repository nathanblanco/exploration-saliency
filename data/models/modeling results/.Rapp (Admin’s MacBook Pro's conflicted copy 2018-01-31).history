alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: visible rewards', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Competition condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 #par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Competition condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Congruent condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
subjects <- unique(alldata$subj) #[31:32]#
 graphs_per_row = 6#
 par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))#
 #par(mfrow=c(3,5))#
 for (i in subjects) {#
		graphdata <- maindata[maindata$subj == i,]#
 		block1 <- graphdata[graphdata$trial <= 20,]#
 		block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]#
 		block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]#
 		block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]#
 		block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]#
         block1_choices <- c(0,0,0,0)#
         block2_choices <- c(0,0,0,0)#
         block3_choices <- c(0,0,0,0)#
         block4_choices <- c(0,0,0,0)#
         block5_choices <- c(0,0,0,0)#
 		block1_choices[1] <- length(block1[block1$reward == 1,]$reward)#
 		block1_choices[2] <- length(block1[block1$reward == 2,]$reward)#
 		block1_choices[3] <- length(block1[block1$reward == 3,]$reward)#
 		block1_choices[4] <- length(block1[block1$reward == 10,]$reward)#
 		block1_choices[is.na(block1_choices)] <- 0#
 		block2_choices[1] <- length(block2[block2$reward == 1,]$reward)#
 		block2_choices[2] <- length(block2[block2$reward == 2,]$reward)#
 		block2_choices[3] <- length(block2[block2$reward == 3,]$reward)#
 		block2_choices[4] <- length(block2[block2$reward == 10,]$reward)#
 		block2_choices[is.na(block2_choices)] <- 0#
 		block3_choices[1] <- length(block3[block3$reward == 1,]$reward)#
 		block3_choices[2] <- length(block3[block3$reward == 2,]$reward)#
 		block3_choices[3] <- length(block3[block3$reward == 3,]$reward)#
 		block3_choices[4] <- length(block3[block3$reward == 10,]$reward)#
 		block3_choices[is.na(block3_choices)] <- 0#
 		block4_choices[1] <- length(block4[block4$reward == 1,]$reward)#
 		block4_choices[2] <- length(block4[block4$reward == 2,]$reward)#
 		block4_choices[3] <- length(block4[block4$reward == 3,]$reward)#
 		block4_choices[4] <- length(block4[block4$reward == 10,]$reward)#
 		block4_choices[is.na(block4_choices)] <- 0#
 		block5_choices[1] <- length(block5[block5$reward == 1,]$reward)#
 		block5_choices[2] <- length(block5[block5$reward == 2,]$reward)#
 		block5_choices[3] <- length(block5[block5$reward == 3,]$reward)#
 		block5_choices[4] <- length(block5[block5$reward == 10,]$reward)#
 		block5_choices[is.na(block5_choices)] <- 0#
 		# means#
 		line10 <- c( block1_choices[4]/20, #
 					 block2_choices[4]/20,#
 					 block3_choices[4]/20,#
 					 block4_choices[4]/20,#
 					 block5_choices[4]/20)#
 		line3 <- c( block1_choices[3]/20, #
 					 block2_choices[3]/20,#
 					 block3_choices[3]/20,#
 					 block4_choices[3]/20,#
 					 block5_choices[3]/20)#
 		line2 <- c( block1_choices[2]/20, #
 					 block2_choices[2]/20,#
 					 block3_choices[2]/20,#
 					 block4_choices[2]/20,#
 					 block5_choices[2]/20)#
 		line1 <- c( block1_choices[1]/20, #
 					 block2_choices[1]/20,#
 					 block3_choices[1]/20,#
 					 block4_choices[1]/20,#
 					 block5_choices[1]/20)#
 		plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',#
 		xlab="Block", mar = c(0.1,0.1,0.1,0.1), main=toString(i))#
 		lines(line3, col = 'green')#
 		lines(line2, col = 'yellow')#
 		lines(line1, col = 'red')#
 	   }
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
congruent.stay_total <- stay_total
alldata <- read.table('creature1_children.txt', header=F)#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}
competition.stay_total <- stay_total
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)
baseline.stay_total <- stay_total
graph_data <- NULL#
graph_data$switches <- c(1-(congruent.stay_total)/100, 1-(competition.stay_total)/100, 1-(baseline.stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(congruent.stay_total)),#
							 rep("Competition", length(competition.stay_total)),#
							 rep("Baseline", length(competition.stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
graph_data <- NULL#
graph_data$switches <- c(1-(congruent.stay_total)/100, 1-(competition.stay_total)/100, 1-(baseline.stay_total)/100)#
graph_data$group <- factor(c(rep("Congruent", length(congruent.stay_total)),#
							 rep("Competition", length(competition.stay_total)),#
							 rep("Baseline", length(baseline.stay_total))))#
graph_data <- as.data.frame(graph_data)#
#
boxplot(switches ~ group, data=graph_data,#
 ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),#
 main = 'Response Switching', names.arg=c('Congruent', 'Competition'))#
stripchart(switches ~ group, data=graph_data, vertical = TRUE,  #
    method = "jitter", add = TRUE, pch = 19, col = c('blue', 'red', 'green'))#
abline(0.83, 0, col='red')#
abline(0.65, 0, col='red')
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')
stay_total
t.test(congruent.stay_total, competition.stay_total, var.equal=T)#
t.test(congruent.stay_total, baseline.stay_total, var.equal=T)#
t.test(baseline.stay_total, competition.stay_total, var.equal=T)
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
congruent.props <- choice_props
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Children: Congruent condition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
###########################
choice_props <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
#
0.4290625#
#
t.test(choice_props_adults, choice_props_kids, var.equal=T)#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Congruent', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
###########################
choice_props <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
#
0.4290625#
#
t.test(choice_props_adults, choice_props_kids, var.equal=T)#
#
d.t.unpaired<-function(t.val,n1,n2){#
  d<-t.val*sqrt((n1+n2)/(n1*n2))#
  names(d)<-"effect size d"#
  return(d)#
}#
block1 <- maindata[maindata$trial <= 20,]#
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]#
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]#
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]#
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Competition', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Baseline', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
baseline.props <- choice_props
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
competition.props <- choice_props
congruent.props #
baseline.props #
competition.props
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
baseline.props <- choice_props
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
congruent.props
length(congruent.props)
congruent.props[22]
congruent.props[22] <- 0#
#
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
results <- NULL#
#
results$props <- c(congruent.props, competition.props, baseline.props)#
results$cond <- factor(c(rep(1, length(congruent.props)),#
						rep(2, length(competition.props)),#
						rep(3, length(baseline.props))))
as.data.frame(results)
results <- as.data.frame(results)
x <- aov(props~cond, data=results)#
summary(x)
t.test(congruent.props, competition.props, var.equal=T)#
t.test(congruent.props, baseline.props, var.equal=T)#
t.test(baseline.props, competition.props, var.equal=T)
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
baseline.props <- choice_props
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
congruent.props <- choice_props
t.test(congruent.props, baseline.props, var.equal=T)
length(congruent.props)
congruent.props
congruent.props[22] <- 0
t.test(congruent.props, baseline.props, var.equal=T)
length(baseline.props)
t.test(congruent.props, baseline.props, var.equal=T)
baseline.props
length(congruent.props)
#alldata <- read.table('creatures10_children.txt', header=F)#
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
competition.props <- choice_props
length(competition.props)
competition.props
t.test(congruent.props, competition.props, var.equal=T)#
t.test(congruent.props, baseline.props, var.equal=T)#
t.test(baseline.props, competition.props, var.equal=T)
#alldata <- read.table('creatures10_children.txt', header=F)#
alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)
choice_props <- choices[,1]/100
competition.props <- choice_props
alldata <- read.table('creatures10_children.txt', header=F)#
#alldata <- read.table('creature1_children.txt', header=F)#
#
#alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
#
choice_props <- choices[,1]/100
congruent.props <- choice_props
alldata <- read.table('baseline_children.txt', header=F)#
#
# self.output_trial([self.subj, 'main', self.trial, self.cond, res, rt, payoff, self.earnings, self.creatures[int(res)], self.rewards])#
#
names(alldata) <- c('subj', 'phase', 'trial', 'cond', 'res', 'rt', 'reward', 'total', 'image', 'r1', 'r2', 'r3', 'r4')#
#
maindata <- alldata[alldata$phase == 'main',]#
testdata <- alldata[alldata$phase == 'test',]#
#
maindata$stay <- NULL#
for (i in 1:length(maindata[,1])) {#
    maindata$stay[i] <- as.numeric(maindata[i,]$res == maindata[i-1,]$res)#
    if (maindata[i,]$trial == 1) { maindata$stay[i] <- 0 }#
    }#
#
stay_total <- tapply(maindata$stay, maindata$subj, sum)#
#
for (i in 1:length(stay_total)) {#
	x <- binom.test(stay_total[i], 100, 0.25)#
	print(x)#
}#
#
#for (i in seq(100)) {#
#	x <- binom.test(i, 100, 0.75)#
#	print(x)#
#	#
#}#
#
65-83#
#
#binom.test(x, n, p = 0.5,#
#           alternative = c("two.sided", "less", "greater"),#
#           conf.level = 0.95)#
stay_props <- tapply(maindata$stay, maindata$subj, mean)#
#
hist(stay_props, main= "Children:  Stay proportions", xlab="Proportion of repeat responses", col='grey')#
#
barplot(stay_props[order(stay_props)],#
		main ='Baseline: adults',#
		ylim=c(0,1),#
		ylab="Proportion of repeat responses",#
		xlab="Participant")#
barplot(1-stay_props[order(stay_props)],#
		main ="Childrens's Switch Responses",#
		ylim=c(0,1),#
		ylab="Proportion of switch responses",#
		xlab="Participant", cex.axis=1.5, cex.lab=1.5)#
abline(0.65, 0, col='red')#
abline(0.83, 0, col='red')#
#
stay_props_byoptions <- tapply(maindata$stay, list(maindata$reward, maindata$subj), mean)#
#
# only for baseline kids because of one kid that never chose 2 option#
#stay_props_byoptions[2,5] <- 0#
means <- c( mean(stay_props_byoptions[1,], na.rm=T),#
			mean(stay_props_byoptions[2,] , na.rm=T),#
			mean(stay_props_byoptions[3,] , na.rm=T), #
			mean(stay_props_byoptions[4,] , na.rm=T))#
sds <- c( sd(stay_props_byoptions[1,], na.rm=T),#
			sd(stay_props_byoptions[2,], na.rm=T),#
			sd(stay_props_byoptions[3,], na.rm=T),#
			sd(stay_props_byoptions[4,], na.rm=T))#
#
ns <- c( length(stay_props_byoptions[1,]),#
			length(stay_props_byoptions[2,]),#
			length(stay_props_byoptions[3,]),#
			length(stay_props_byoptions[4,]))#
ses <- sds/sqrt(ns)#
#
x <- barplot(means, names.arg = c("1", "2", "3", "10"),#
			 main = "Creature Novelty: children",#
			 xlab = "option",#
			 ylab = "stay proportion",#
			 ylim = c(0,1))#
segments(x, means+ses, x, means-ses)#
#
#######################
choices <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)#
choice_props <- choices[,4]/100#
t.test(choice_props, mu=0.25)#
#
choice_props <- choices[,1]/100
baseline.props <- choice_props
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
congruent.props
competition.props
congruent.props[8]
congruent.props[13] <- 0
competition.props[3]
competition.props[17]
congruent.props[8] <- 0#
congruent.props[13] <- 0#
#
competition.props[3] <- 0#
competition.props[17] <- 0
mean(congruent.props )#
mean(baseline.props )#
mean(competition.props )
results <- NULL#
#
results$props <- c(congruent.props, competition.props, baseline.props)#
results$cond <- factor(c(rep(1, length(congruent.props)),#
						rep(2, length(competition.props)),#
						rep(3, length(baseline.props))))#
results <- as.data.frame(results)#
#
x <- aov(props~cond, data=results)#
summary(x)
t.test(congruent.props, competition.props, var.equal=T)#
t.test(congruent.props, baseline.props, var.equal=T)#
t.test(baseline.props, competition.props, var.equal=T)
#############################################################
#
congruent.data <- read.table('EBM_aics_congruent.txt', header=T)#
competition.data <- read.table('EBM_aics_competition.txt', header=T)#
baseline.data <- read.table('EBM_aics_baseline.txt', header=T)#
baseline.data <- baseline.data[baseline.data$subj != 20162,]#
baseline.data <- baseline.data[baseline.data$subj !=20163,]#
baseline.data <- baseline.data[baseline.data$subj !=20164 ,]#
baseline.data <- baseline.data[baseline.data$subj !=20169  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62036 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62037 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62038 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62039 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62040 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1111  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1112  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1113 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1114  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1115 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62041  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62042 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62043 ,]#
#
#########
median(congruent.data$ebm_weight)#
median(competition.data$ebm_weight)#
median(baseline.data$ebm_weight)#
#
mean(congruent.data$ebm_weight)#
mean(competition.data$ebm_weight)#
mean(baseline.data$ebm_weight)#
#
par(mfrow=c(3,1))#
hist(congruent.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Congruent', xlab="Phi", col = 'grey')#
hist(competition.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Competition', xlab='Phi', col = 'grey')#
hist(baseline.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Baseline', xlab='Phi', col = 'grey')
wilcox.test(congruent.data$ebm_weight , competition.data$ebm_weight, correct=T)#
wilcox.test(congruent.data$ebm_weight , baseline.data$ebm_weight, correct=T)#
wilcox.test(baseline.data$ebm_weight , competition.data$ebm_weight, correct=T)#
wilcox.test(congruent.data$ebm_Bev , competition.data$ebm_Bev, correct=T)#
wilcox.test(congruent.data$ebm_Bev , baseline.data$ebm_Bev, correct=T)#
wilcox.test(baseline.data$ebm_Bev , competition.data$ebm_Bev, correct=T)
congruent.ratio <- congruent.data$Lag_Bev/congruent.data$Lag_Blag#
competition.ratio <- competition.data$Lag_Bev/competition.data$Lag_Blag#
#
baseline.data <- read.table('aics_children.txt', header=T)#
#
baseline.data <- baseline.data[baseline.data$subj != 20162,]#
baseline.data <- baseline.data[baseline.data$subj !=20163,]#
baseline.data <- baseline.data[baseline.data$subj !=20164 ,]#
baseline.data <- baseline.data[baseline.data$subj !=20169  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62036 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62037 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62038 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62039 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62040 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1111  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1112  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1113 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1114  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1115 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62041  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62042 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62043 ,]#
baseline.ratio <- baseline.data$Bev/baseline.data$Blag#
#
RL_comp <- read.table('RL_aics_competition.txt', header=T)#
RL_cong <- read.table('RL_aics_congruent.txt', header=T)#
#
comp.fit <- as.numeric(RL_comp$RL_aic < competition.data$ebm_aic)#
cong.fit <- as.numeric(RL_cong$RL_aic < congruent.data$ebm_aic)#
bl.fit <- as.numeric(baseline.data$RL < baseline.data$lag)#
t.test(comp.fit, bl.fit, var.equal=T)#
t.test(cong.fit, bl.fit, var.equal=T)#
wilcox.test(congruent.ratio, competition.ratio, correct=T)#
wilcox.test(congruent.ratio , baseline.ratio, correct=T)#
wilcox.test(baseline.ratio , competition.ratio, correct=T)#
wilcox.test(congruent.data$Lag_Blag, competition.data$Lag_Blag, correct=T)#
wilcox.test(congruent.data$Lag_Blag, baseline.data$Blag, correct=T)#
wilcox.test(baseline.data$Blag, competition.data$Lag_Blag, correct=T)#
#
wilcox.test(congruent.data$Lag_Bev, competition.data$Lag_Bev, correct=T)#
wilcox.test(congruent.data$Lag_Bev, baseline.data$Bev, correct=T)#
wilcox.test(baseline.data$Bev, competition.data$Lag_Bev, correct=T)
median(congruent.ratio)#
median(competition.ratio)#
median(baseline.ratio)#
#
#mean(congruent.ratio)#
#mean(competition.ratio)#
#mean(baseline.ratio)#
median(congruent.data$Lag_Bev)#
median(competition.data$Lag_Bev)#
median(baseline.data$Bev)#
#
median(congruent.data$Lag_Blag)#
median(competition.data$Lag_Blag)#
median(baseline.data$Blag)
t.test(congruent.ratio, competition.ratio, var.equal=T)#
t.test(congruent.ratio , baseline.ratio, var.equal=T)#
t.test(baseline.ratio , competition.ratio, var.equal=T)#
t.test(congruent.data$Lag_Blag, competition.data$Lag_Blag, var.equal=T)#
t.test(congruent.data$Lag_Blag, baseline.data$Blag, var.equal=T)#
t.test(baseline.data$Blag, competition.data$Lag_Blag, var.equal=T)#
#
t.test(congruent.data$Lag_Bev, competition.data$Lag_Bev, var.equal=T)#
t.test(congruent.data$Lag_Bev, baseline.data$Bev, var.equal=T)#
t.test(baseline.data$Bev, competition.data$Lag_Bev, var.equal=T)
congruent.data <- read.table('EBM_aics_congruent.txt', header=T)#
competition.data <- read.table('EBM_aics_competition.txt', header=T)#
baseline.data <- read.table('EBM_aics_baseline.txt', header=T)#
baseline.data <- baseline.data[baseline.data$subj != 20162,]#
baseline.data <- baseline.data[baseline.data$subj !=20163,]#
baseline.data <- baseline.data[baseline.data$subj !=20164 ,]#
baseline.data <- baseline.data[baseline.data$subj !=20169  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62036 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62037 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62038 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62039 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62040 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1111  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1112  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1113 ,]#
baseline.data <- baseline.data[baseline.data$subj !=1114  ,]#
baseline.data <- baseline.data[baseline.data$subj !=1115 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62041  ,]#
baseline.data <- baseline.data[baseline.data$subj !=62042 ,]#
baseline.data <- baseline.data[baseline.data$subj !=62043 ,]#
#
#########
median(congruent.data$ebm_weight)#
median(competition.data$ebm_weight)#
median(baseline.data$ebm_weight)#
#
mean(congruent.data$ebm_weight)#
mean(competition.data$ebm_weight)#
mean(baseline.data$ebm_weight)#
#
par(mfrow=c(3,1))#
hist(congruent.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Congruent', xlab="Phi", col = 'grey')#
hist(competition.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Competition', xlab='Phi', col = 'grey')#
hist(baseline.data$ebm_weight, xlim=c(0,1), ylim=c(0,25), breaks=c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0), main='Baseline', xlab='Phi', col = 'grey')#
#
wilcox.test(congruent.data$ebm_weight , competition.data$ebm_weight, correct=T)#
wilcox.test(congruent.data$ebm_weight , baseline.data$ebm_weight, correct=T)#
wilcox.test(baseline.data$ebm_weight , competition.data$ebm_weight, correct=T)#
wilcox.test(congruent.data$ebm_Bev , competition.data$ebm_Bev, correct=T)#
wilcox.test(congruent.data$ebm_Bev , baseline.data$ebm_Bev, correct=T)#
wilcox.test(baseline.data$ebm_Bev , competition.data$ebm_Bev, correct=T)#
#t.test(congruent.data$ebm_weight , competition.data$ebm_weight, var.equal=T)#
#t.test(congruent.data$ebm_weight , baseline.data$ebm_weight, var.equal=T)#
#t.test(baseline.data$ebm_weight , competition.data$ebm_weight, var.equal=T)#
#t.test(congruent.data$ebm_Bev , competition.data$ebm_Bev, var.equal=T)#
#t.test(congruent.data$ebm_Bev , baseline.data$ebm_Bev, var.equal=T)#
#t.test(baseline.data$ebm_Bev , competition.data$ebm_Bev, var.equal=T)#
median(congruent.data$ebm_Bev)#
median(competition.data$ebm_Bev)#
median(baseline.data$ebm_Bev)
results <- NULL#
#
results$phi <- c(congruent.data$ebm_weight, competition.data$ebm_weight, baseline.data$ebm_weight)#
results$beta <- c(congruent.data$ebm_Bev, competition.data$ebm_Bev, baseline.data$Bev)#
results$cond <- factor(c(rep(1, length(congruent.data$ebm_weight)),#
						rep(2, length(competition.data$ebm_weight)),#
						rep(3, length(baseline.data$ebm_weight))))#
results <- as.data.frame(results)#
#
x <- aov(phi~cond, data=results)#
summary(x)#
#
x <- aov(beta~cond, data=results)#
summary(x)
results
results <- NULL#
#
results$phi <- c(congruent.data$ebm_weight, competition.data$ebm_weight, baseline.data$ebm_weight)#
results$beta <- c(congruent.data$ebm_Bev, competition.data$ebm_Bev, baseline.data$ebm_Bev)#
results$cond <- factor(c(rep(1, length(congruent.data$ebm_weight)),#
						rep(2, length(competition.data$ebm_weight)),#
						rep(3, length(baseline.data$ebm_weight))))#
results <- as.data.frame(results)#
#
x <- aov(phi~cond, data=results)#
summary(x)#
#
x <- aov(beta~cond, data=results)#
summary(x)
sd(congruent.data$ebm_weight)#
sd(competition.data$ebm_weight)#
sd(baseline.data$ebm_weight)
sd(congruent.data$ebm_Bev)#
sd(competition.data$ebm_Bev)#
sd(baseline.data$ebm_Bev)
median(congruent.data$ebm_Bev)#
median(competition.data$ebm_Bev)#
median(baseline.data$ebm_Bev)
